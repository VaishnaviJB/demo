{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "80823243",
   "metadata": {},
   "source": [
    "# Develop a DCGAN model for CIFAR-10 small object Photograph Dataset, for implement this model - create a generator and discriminator model and then generate the new set of fake images to ensure the GAN outcome."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f35a4dc9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WARNING:tensorflow:From F:\\Users\\vaish\\anaconda3\\Lib\\site-packages\\keras\\src\\losses.py:2976: The name tf.losses.sparse_softmax_cross_entropy is deprecated. Please use tf.compat.v1.losses.sparse_softmax_cross_entropy instead.\n",
      "\n",
      "WARNING:tensorflow:From F:\\Users\\vaish\\anaconda3\\Lib\\site-packages\\keras\\src\\backend.py:873: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:absl:`lr` is deprecated in Keras optimizer, please use `learning_rate` or use the legacy optimizer, e.g.,tf.keras.optimizers.legacy.Adam.\n",
      "WARNING:absl:`lr` is deprecated in Keras optimizer, please use `learning_rate` or use the legacy optimizer, e.g.,tf.keras.optimizers.legacy.Adam.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WARNING:tensorflow:From F:\\Users\\vaish\\anaconda3\\Lib\\site-packages\\keras\\src\\utils\\tf_utils.py:492: The name tf.ragged.RaggedTensorValue is deprecated. Please use tf.compat.v1.ragged.RaggedTensorValue instead.\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:tensorflow:From F:\\Users\\vaish\\anaconda3\\Lib\\site-packages\\keras\\src\\utils\\tf_utils.py:492: The name tf.ragged.RaggedTensorValue is deprecated. Please use tf.compat.v1.ragged.RaggedTensorValue instead.\n",
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WARNING:tensorflow:From F:\\Users\\vaish\\anaconda3\\Lib\\site-packages\\keras\\src\\engine\\base_layer_utils.py:384: The name tf.executing_eagerly_outside_functions is deprecated. Please use tf.compat.v1.executing_eagerly_outside_functions instead.\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:tensorflow:From F:\\Users\\vaish\\anaconda3\\Lib\\site-packages\\keras\\src\\engine\\base_layer_utils.py:384: The name tf.executing_eagerly_outside_functions is deprecated. Please use tf.compat.v1.executing_eagerly_outside_functions instead.\n",
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4/4 [==============================] - 0s 60ms/step\n",
      ">1, 1/195, d1=0.684, d2=0.712 g=0.688\n",
      "4/4 [==============================] - 0s 57ms/step\n",
      "4/4 [==============================] - 0s 61ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 53ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 57ms/step\n",
      "4/4 [==============================] - 0s 53ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 56ms/step\n",
      "4/4 [==============================] - 0s 51ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 56ms/step\n",
      "4/4 [==============================] - 0s 56ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 72ms/step\n",
      "4/4 [==============================] - 0s 53ms/step\n",
      "4/4 [==============================] - 0s 58ms/step\n",
      "4/4 [==============================] - 0s 53ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 56ms/step\n",
      "4/4 [==============================] - 0s 51ms/step\n",
      "4/4 [==============================] - 0s 56ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 62ms/step\n",
      "4/4 [==============================] - 0s 53ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 49ms/step\n",
      "4/4 [==============================] - 0s 53ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 53ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 50ms/step\n",
      "4/4 [==============================] - 0s 57ms/step\n",
      "4/4 [==============================] - 0s 50ms/step\n",
      "4/4 [==============================] - 0s 56ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 51ms/step\n",
      "4/4 [==============================] - 0s 53ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 57ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 59ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 53ms/step\n",
      "4/4 [==============================] - 0s 53ms/step\n",
      "4/4 [==============================] - 0s 58ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 53ms/step\n",
      "4/4 [==============================] - 0s 57ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 57ms/step\n",
      "4/4 [==============================] - 0s 53ms/step\n",
      "4/4 [==============================] - 0s 62ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 56ms/step\n",
      "4/4 [==============================] - 0s 56ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 56ms/step\n",
      "4/4 [==============================] - 0s 59ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 51ms/step\n",
      "4/4 [==============================] - 0s 46ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 49ms/step\n",
      "4/4 [==============================] - 0s 62ms/step\n",
      "4/4 [==============================] - 0s 53ms/step\n",
      "4/4 [==============================] - 0s 50ms/step\n",
      "4/4 [==============================] - 0s 51ms/step\n",
      "4/4 [==============================] - 0s 56ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 50ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 58ms/step\n",
      "4/4 [==============================] - 0s 53ms/step\n",
      "4/4 [==============================] - 0s 53ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 56ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 51ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      ">1, 101/195, d1=0.665, d2=0.385 g=1.970\n",
      "4/4 [==============================] - 0s 57ms/step\n",
      "4/4 [==============================] - 0s 53ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 56ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 58ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 57ms/step\n",
      "4/4 [==============================] - 0s 61ms/step\n",
      "4/4 [==============================] - 0s 61ms/step\n",
      "4/4 [==============================] - 0s 53ms/step\n",
      "4/4 [==============================] - 0s 58ms/step\n",
      "4/4 [==============================] - 0s 56ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 57ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 51ms/step\n",
      "4/4 [==============================] - 0s 51ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 50ms/step\n",
      "4/4 [==============================] - 0s 58ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 60ms/step\n",
      "4/4 [==============================] - 0s 49ms/step\n",
      "4/4 [==============================] - 0s 51ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 50ms/step\n",
      "4/4 [==============================] - 0s 50ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 50ms/step\n",
      "4/4 [==============================] - 0s 53ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 67ms/step\n",
      "4/4 [==============================] - 0s 51ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 53ms/step\n",
      "4/4 [==============================] - 0s 49ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 53ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 53ms/step\n",
      "4/4 [==============================] - 0s 60ms/step\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4/4 [==============================] - 0s 58ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 60ms/step\n",
      "4/4 [==============================] - 0s 56ms/step\n",
      "4/4 [==============================] - 0s 56ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 51ms/step\n",
      "4/4 [==============================] - 0s 53ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 56ms/step\n",
      "4/4 [==============================] - 0s 62ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 51ms/step\n",
      "4/4 [==============================] - 0s 51ms/step\n",
      "4/4 [==============================] - 0s 58ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 53ms/step\n",
      "4/4 [==============================] - 0s 53ms/step\n",
      "4/4 [==============================] - 0s 51ms/step\n",
      "4/4 [==============================] - 0s 56ms/step\n",
      "4/4 [==============================] - 0s 56ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 58ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 56ms/step\n",
      "4/4 [==============================] - 0s 51ms/step\n",
      "4/4 [==============================] - 0s 53ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "5/5 [==============================] - 0s 51ms/step\n",
      ">Accuracy real: 61%, fake: 75%\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 49 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "F:\\Users\\vaish\\anaconda3\\Lib\\site-packages\\keras\\src\\engine\\training.py:3103: UserWarning: You are saving your model as an HDF5 file via `model.save()`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')`.\n",
      "  saving_api.save_model(\n",
      "WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4/4 [==============================] - 0s 51ms/step\n",
      ">2, 1/195, d1=0.643, d2=0.556 g=1.158\n",
      "4/4 [==============================] - 0s 57ms/step\n",
      "4/4 [==============================] - 0s 57ms/step\n",
      "4/4 [==============================] - 0s 57ms/step\n",
      "4/4 [==============================] - 0s 50ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 60ms/step\n",
      "4/4 [==============================] - 0s 58ms/step\n",
      "4/4 [==============================] - 0s 51ms/step\n",
      "4/4 [==============================] - 0s 58ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 50ms/step\n",
      "4/4 [==============================] - 0s 57ms/step\n",
      "4/4 [==============================] - 0s 56ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 60ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 56ms/step\n",
      "4/4 [==============================] - 0s 51ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 57ms/step\n",
      "4/4 [==============================] - 0s 56ms/step\n",
      "4/4 [==============================] - 0s 50ms/step\n",
      "4/4 [==============================] - 0s 51ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 56ms/step\n",
      "4/4 [==============================] - 0s 57ms/step\n",
      "4/4 [==============================] - 0s 51ms/step\n",
      "4/4 [==============================] - 0s 51ms/step\n",
      "4/4 [==============================] - 0s 53ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 56ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 53ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 57ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 57ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 57ms/step\n",
      "4/4 [==============================] - 0s 51ms/step\n",
      "4/4 [==============================] - 0s 50ms/step\n",
      "4/4 [==============================] - 0s 56ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 69ms/step\n",
      "4/4 [==============================] - 0s 58ms/step\n",
      "4/4 [==============================] - 0s 56ms/step\n",
      "4/4 [==============================] - 0s 51ms/step\n",
      "4/4 [==============================] - 0s 49ms/step\n",
      "4/4 [==============================] - 0s 56ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 49ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 56ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 53ms/step\n",
      "4/4 [==============================] - 0s 53ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 56ms/step\n",
      "4/4 [==============================] - 0s 63ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 58ms/step\n",
      "4/4 [==============================] - 0s 56ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 53ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 50ms/step\n",
      "4/4 [==============================] - 0s 57ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 51ms/step\n",
      "4/4 [==============================] - 0s 57ms/step\n",
      "4/4 [==============================] - 0s 51ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 50ms/step\n",
      "4/4 [==============================] - 0s 51ms/step\n",
      "4/4 [==============================] - 0s 55ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 54ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 52ms/step\n",
      "4/4 [==============================] - 0s 48ms/step\n",
      "4/4 [==============================] - 0s 64ms/step\n"
     ]
    },
    {
     "ename": "KeyboardInterrupt",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[1], line 204\u001b[0m\n\u001b[0;32m    202\u001b[0m dataset \u001b[38;5;241m=\u001b[39m load_real_samples()\n\u001b[0;32m    203\u001b[0m \u001b[38;5;66;03m# train model\u001b[39;00m\n\u001b[1;32m--> 204\u001b[0m train(g_model, d_model, gan_model, dataset, latent_dim, \u001b[38;5;241m20\u001b[39m, \u001b[38;5;241m256\u001b[39m)\n",
      "Cell \u001b[1;32mIn[1], line 176\u001b[0m, in \u001b[0;36mtrain\u001b[1;34m(g_model, d_model, gan_model, dataset, latent_dim, n_epochs, n_batch)\u001b[0m\n\u001b[0;32m    174\u001b[0m d_loss1, _ \u001b[38;5;241m=\u001b[39m d_model\u001b[38;5;241m.\u001b[39mtrain_on_batch(X_real, y_real)\n\u001b[0;32m    175\u001b[0m \u001b[38;5;66;03m# generate 'fake' examples\u001b[39;00m\n\u001b[1;32m--> 176\u001b[0m X_fake, y_fake \u001b[38;5;241m=\u001b[39m generate_fake_samples(g_model, latent_dim, half_batch)\n\u001b[0;32m    177\u001b[0m \u001b[38;5;66;03m# update discriminator model weights\u001b[39;00m\n\u001b[0;32m    178\u001b[0m d_loss2, _ \u001b[38;5;241m=\u001b[39m d_model\u001b[38;5;241m.\u001b[39mtrain_on_batch(X_fake, y_fake)\n",
      "Cell \u001b[1;32mIn[1], line 120\u001b[0m, in \u001b[0;36mgenerate_fake_samples\u001b[1;34m(g_model, latent_dim, n_samples)\u001b[0m\n\u001b[0;32m    118\u001b[0m x_input \u001b[38;5;241m=\u001b[39m generate_latent_points(latent_dim, n_samples)\n\u001b[0;32m    119\u001b[0m \u001b[38;5;66;03m# predict outputs\u001b[39;00m\n\u001b[1;32m--> 120\u001b[0m X \u001b[38;5;241m=\u001b[39m g_model\u001b[38;5;241m.\u001b[39mpredict(x_input)\n\u001b[0;32m    121\u001b[0m \u001b[38;5;66;03m# create 'fake' class labels (0)\u001b[39;00m\n\u001b[0;32m    122\u001b[0m y \u001b[38;5;241m=\u001b[39m zeros((n_samples, \u001b[38;5;241m1\u001b[39m))\n",
      "File \u001b[1;32mF:\\Users\\vaish\\anaconda3\\Lib\\site-packages\\keras\\src\\utils\\traceback_utils.py:65\u001b[0m, in \u001b[0;36mfilter_traceback.<locals>.error_handler\u001b[1;34m(*args, **kwargs)\u001b[0m\n\u001b[0;32m     63\u001b[0m filtered_tb \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[0;32m     64\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m---> 65\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m fn(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n\u001b[0;32m     66\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mException\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m e:\n\u001b[0;32m     67\u001b[0m     filtered_tb \u001b[38;5;241m=\u001b[39m _process_traceback_frames(e\u001b[38;5;241m.\u001b[39m__traceback__)\n",
      "File \u001b[1;32mF:\\Users\\vaish\\anaconda3\\Lib\\site-packages\\keras\\src\\engine\\training.py:2620\u001b[0m, in \u001b[0;36mModel.predict\u001b[1;34m(self, x, batch_size, verbose, steps, callbacks, max_queue_size, workers, use_multiprocessing)\u001b[0m\n\u001b[0;32m   2611\u001b[0m     \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m:\n\u001b[0;32m   2612\u001b[0m         warnings\u001b[38;5;241m.\u001b[39mwarn(\n\u001b[0;32m   2613\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mUsing Model.predict with MultiWorkerMirroredStrategy \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   2614\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mor TPUStrategy and AutoShardPolicy.FILE might lead to \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m   2617\u001b[0m             stacklevel\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m2\u001b[39m,\n\u001b[0;32m   2618\u001b[0m         )\n\u001b[1;32m-> 2620\u001b[0m data_handler \u001b[38;5;241m=\u001b[39m data_adapter\u001b[38;5;241m.\u001b[39mget_data_handler(\n\u001b[0;32m   2621\u001b[0m     x\u001b[38;5;241m=\u001b[39mx,\n\u001b[0;32m   2622\u001b[0m     batch_size\u001b[38;5;241m=\u001b[39mbatch_size,\n\u001b[0;32m   2623\u001b[0m     steps_per_epoch\u001b[38;5;241m=\u001b[39msteps,\n\u001b[0;32m   2624\u001b[0m     initial_epoch\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m0\u001b[39m,\n\u001b[0;32m   2625\u001b[0m     epochs\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m1\u001b[39m,\n\u001b[0;32m   2626\u001b[0m     max_queue_size\u001b[38;5;241m=\u001b[39mmax_queue_size,\n\u001b[0;32m   2627\u001b[0m     workers\u001b[38;5;241m=\u001b[39mworkers,\n\u001b[0;32m   2628\u001b[0m     use_multiprocessing\u001b[38;5;241m=\u001b[39muse_multiprocessing,\n\u001b[0;32m   2629\u001b[0m     model\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m,\n\u001b[0;32m   2630\u001b[0m     steps_per_execution\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_steps_per_execution,\n\u001b[0;32m   2631\u001b[0m )\n\u001b[0;32m   2633\u001b[0m \u001b[38;5;66;03m# Container that configures and calls `tf.keras.Callback`s.\u001b[39;00m\n\u001b[0;32m   2634\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(callbacks, callbacks_module\u001b[38;5;241m.\u001b[39mCallbackList):\n",
      "File \u001b[1;32mF:\\Users\\vaish\\anaconda3\\Lib\\site-packages\\keras\\src\\engine\\data_adapter.py:1688\u001b[0m, in \u001b[0;36mget_data_handler\u001b[1;34m(*args, **kwargs)\u001b[0m\n\u001b[0;32m   1686\u001b[0m         \u001b[38;5;28;01mreturn\u001b[39;00m _ClusterCoordinatorExactEvalDataHandler(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n\u001b[0;32m   1687\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m _ClusterCoordinatorDataHandler(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n\u001b[1;32m-> 1688\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m DataHandler(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n",
      "File \u001b[1;32mF:\\Users\\vaish\\anaconda3\\Lib\\site-packages\\keras\\src\\engine\\data_adapter.py:1292\u001b[0m, in \u001b[0;36mDataHandler.__init__\u001b[1;34m(self, x, y, sample_weight, batch_size, steps_per_epoch, initial_epoch, epochs, shuffle, class_weight, max_queue_size, workers, use_multiprocessing, model, steps_per_execution, distribute, pss_evaluation_shards)\u001b[0m\n\u001b[0;32m   1289\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_steps_per_execution \u001b[38;5;241m=\u001b[39m steps_per_execution\n\u001b[0;32m   1291\u001b[0m adapter_cls \u001b[38;5;241m=\u001b[39m select_data_adapter(x, y)\n\u001b[1;32m-> 1292\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_adapter \u001b[38;5;241m=\u001b[39m adapter_cls(\n\u001b[0;32m   1293\u001b[0m     x,\n\u001b[0;32m   1294\u001b[0m     y,\n\u001b[0;32m   1295\u001b[0m     batch_size\u001b[38;5;241m=\u001b[39mbatch_size,\n\u001b[0;32m   1296\u001b[0m     steps\u001b[38;5;241m=\u001b[39msteps_per_epoch,\n\u001b[0;32m   1297\u001b[0m     epochs\u001b[38;5;241m=\u001b[39mepochs \u001b[38;5;241m-\u001b[39m initial_epoch,\n\u001b[0;32m   1298\u001b[0m     sample_weights\u001b[38;5;241m=\u001b[39msample_weight,\n\u001b[0;32m   1299\u001b[0m     shuffle\u001b[38;5;241m=\u001b[39mshuffle,\n\u001b[0;32m   1300\u001b[0m     max_queue_size\u001b[38;5;241m=\u001b[39mmax_queue_size,\n\u001b[0;32m   1301\u001b[0m     workers\u001b[38;5;241m=\u001b[39mworkers,\n\u001b[0;32m   1302\u001b[0m     use_multiprocessing\u001b[38;5;241m=\u001b[39muse_multiprocessing,\n\u001b[0;32m   1303\u001b[0m     distribution_strategy\u001b[38;5;241m=\u001b[39mtf\u001b[38;5;241m.\u001b[39mdistribute\u001b[38;5;241m.\u001b[39mget_strategy(),\n\u001b[0;32m   1304\u001b[0m     model\u001b[38;5;241m=\u001b[39mmodel,\n\u001b[0;32m   1305\u001b[0m     pss_evaluation_shards\u001b[38;5;241m=\u001b[39mpss_evaluation_shards,\n\u001b[0;32m   1306\u001b[0m )\n\u001b[0;32m   1308\u001b[0m strategy \u001b[38;5;241m=\u001b[39m tf\u001b[38;5;241m.\u001b[39mdistribute\u001b[38;5;241m.\u001b[39mget_strategy()\n\u001b[0;32m   1310\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_current_step \u001b[38;5;241m=\u001b[39m \u001b[38;5;241m0\u001b[39m\n",
      "File \u001b[1;32mF:\\Users\\vaish\\anaconda3\\Lib\\site-packages\\keras\\src\\engine\\data_adapter.py:296\u001b[0m, in \u001b[0;36mTensorLikeDataAdapter.__init__\u001b[1;34m(self, x, y, sample_weights, sample_weight_modes, batch_size, epochs, steps, shuffle, **kwargs)\u001b[0m\n\u001b[0;32m    284\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_shuffle \u001b[38;5;241m=\u001b[39m shuffle\n\u001b[0;32m    285\u001b[0m \u001b[38;5;66;03m# Vectorized version of shuffle.\u001b[39;00m\n\u001b[0;32m    286\u001b[0m \u001b[38;5;66;03m# This is a performance improvement over using `from_tensor_slices`.\u001b[39;00m\n\u001b[0;32m    287\u001b[0m \u001b[38;5;66;03m# The indices of the data are shuffled and batched, and these indices\u001b[39;00m\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m    293\u001b[0m \u001b[38;5;66;03m# 4. optimized permutation batching\u001b[39;00m\n\u001b[0;32m    294\u001b[0m \u001b[38;5;66;03m# 5. disabled static optimizations\u001b[39;00m\n\u001b[1;32m--> 296\u001b[0m indices_dataset \u001b[38;5;241m=\u001b[39m tf\u001b[38;5;241m.\u001b[39mdata\u001b[38;5;241m.\u001b[39mDataset\u001b[38;5;241m.\u001b[39mrange(\u001b[38;5;241m1\u001b[39m)\n\u001b[0;32m    297\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m shuffle \u001b[38;5;241m!=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mbatch\u001b[39m\u001b[38;5;124m\"\u001b[39m:\n\u001b[0;32m    298\u001b[0m     indices_dataset \u001b[38;5;241m=\u001b[39m indices_dataset\u001b[38;5;241m.\u001b[39mrepeat(epochs)\n",
      "File \u001b[1;32mF:\\Users\\vaish\\anaconda3\\Lib\\site-packages\\tensorflow\\python\\data\\ops\\dataset_ops.py:1012\u001b[0m, in \u001b[0;36mDatasetV2.range\u001b[1;34m(*args, **kwargs)\u001b[0m\n\u001b[0;32m   1008\u001b[0m \u001b[38;5;66;03m# Loaded lazily due to a circular dependency (dataset_ops -> range_op ->\u001b[39;00m\n\u001b[0;32m   1009\u001b[0m \u001b[38;5;66;03m# -> dataset_ops).\u001b[39;00m\n\u001b[0;32m   1010\u001b[0m \u001b[38;5;66;03m# pylint: disable=g-import-not-at-top,protected-access\u001b[39;00m\n\u001b[0;32m   1011\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mtensorflow\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mpython\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mdata\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mops\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m range_op\n\u001b[1;32m-> 1012\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m range_op\u001b[38;5;241m.\u001b[39m_range(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n",
      "File \u001b[1;32mF:\\Users\\vaish\\anaconda3\\Lib\\site-packages\\tensorflow\\python\\data\\ops\\range_op.py:25\u001b[0m, in \u001b[0;36m_range\u001b[1;34m(*args, **kwargs)\u001b[0m\n\u001b[0;32m     24\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m_range\u001b[39m(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs):  \u001b[38;5;66;03m# pylint: disable=unused-private-name\u001b[39;00m\n\u001b[1;32m---> 25\u001b[0m   \u001b[38;5;28;01mreturn\u001b[39;00m _RangeDataset(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n",
      "File \u001b[1;32mF:\\Users\\vaish\\anaconda3\\Lib\\site-packages\\tensorflow\\python\\data\\ops\\range_op.py:35\u001b[0m, in \u001b[0;36m_RangeDataset.__init__\u001b[1;34m(self, *args, **kwargs)\u001b[0m\n\u001b[0;32m     33\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_parse_args(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n\u001b[0;32m     34\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_structure \u001b[38;5;241m=\u001b[39m tensor_spec\u001b[38;5;241m.\u001b[39mTensorSpec([], \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_output_type)\n\u001b[1;32m---> 35\u001b[0m variant_tensor \u001b[38;5;241m=\u001b[39m gen_dataset_ops\u001b[38;5;241m.\u001b[39mrange_dataset(\n\u001b[0;32m     36\u001b[0m     start\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_start,\n\u001b[0;32m     37\u001b[0m     stop\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_stop,\n\u001b[0;32m     38\u001b[0m     step\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_step,\n\u001b[0;32m     39\u001b[0m     \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_common_args)\n\u001b[0;32m     40\u001b[0m \u001b[38;5;28msuper\u001b[39m()\u001b[38;5;241m.\u001b[39m\u001b[38;5;21m__init__\u001b[39m(variant_tensor)\n",
      "File \u001b[1;32mF:\\Users\\vaish\\anaconda3\\Lib\\site-packages\\tensorflow\\python\\ops\\gen_dataset_ops.py:6060\u001b[0m, in \u001b[0;36mrange_dataset\u001b[1;34m(start, stop, step, output_types, output_shapes, metadata, replicate_on_split, name)\u001b[0m\n\u001b[0;32m   6058\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m tld\u001b[38;5;241m.\u001b[39mis_eager:\n\u001b[0;32m   6059\u001b[0m   \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m-> 6060\u001b[0m     _result \u001b[38;5;241m=\u001b[39m pywrap_tfe\u001b[38;5;241m.\u001b[39mTFE_Py_FastPathExecute(\n\u001b[0;32m   6061\u001b[0m       _ctx, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mRangeDataset\u001b[39m\u001b[38;5;124m\"\u001b[39m, name, start, stop, step, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124moutput_types\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m   6062\u001b[0m       output_types, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124moutput_shapes\u001b[39m\u001b[38;5;124m\"\u001b[39m, output_shapes, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmetadata\u001b[39m\u001b[38;5;124m\"\u001b[39m, metadata,\n\u001b[0;32m   6063\u001b[0m       \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mreplicate_on_split\u001b[39m\u001b[38;5;124m\"\u001b[39m, replicate_on_split)\n\u001b[0;32m   6064\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m _result\n\u001b[0;32m   6065\u001b[0m   \u001b[38;5;28;01mexcept\u001b[39;00m _core\u001b[38;5;241m.\u001b[39m_NotOkStatusException \u001b[38;5;28;01mas\u001b[39;00m e:\n",
      "\u001b[1;31mKeyboardInterrupt\u001b[0m: "
     ]
    }
   ],
   "source": [
    "# CIFAR10 DCGAN Example\n",
    "# based on https://machinelearningmastery.com/how-to-develop-a-generative-adversarial-network-for-a-cifar-10-small-object-photographs-from-scratch/\n",
    "\n",
    "from numpy import zeros\n",
    "from numpy import ones\n",
    "from numpy.random import randn\n",
    "from numpy.random import randint\n",
    "from tensorflow.keras.datasets.cifar10 import load_data\n",
    "from tensorflow.keras.optimizers import Adam\n",
    "from tensorflow.keras.models import Sequential\n",
    "from tensorflow.keras.layers import Dense\n",
    "from tensorflow.keras.layers import Reshape\n",
    "from tensorflow.keras.layers import Flatten\n",
    "from tensorflow.keras.layers import Conv2D\n",
    "from tensorflow.keras.layers import Conv2DTranspose\n",
    "from tensorflow.keras.layers import LeakyReLU\n",
    "from tensorflow.keras.layers import Dropout\n",
    "from matplotlib import pyplot\n",
    "\n",
    "\n",
    "# define the standalone discriminator model\n",
    "def define_discriminator(in_shape=(32, 32, 3)):\n",
    "    model = Sequential()\n",
    "    # normal\n",
    "    model.add(Conv2D(64, (3, 3), padding='same', input_shape=in_shape))\n",
    "    model.add(LeakyReLU(alpha=0.2))\n",
    "    # downsample\n",
    "    model.add(Conv2D(128, (3, 3), strides=(2, 2), padding='same'))\n",
    "    model.add(LeakyReLU(alpha=0.2))\n",
    "    # downsample\n",
    "    model.add(Conv2D(128, (3, 3), strides=(2, 2), padding='same'))\n",
    "    model.add(LeakyReLU(alpha=0.2))\n",
    "    # downsample\n",
    "    model.add(Conv2D(256, (3, 3), strides=(2, 2), padding='same'))\n",
    "    model.add(LeakyReLU(alpha=0.2))\n",
    "    # classifier\n",
    "    model.add(Flatten())\n",
    "    model.add(Dropout(0.4))\n",
    "    model.add(Dense(1, activation='sigmoid'))\n",
    "    # compile model\n",
    "    opt = Adam(lr=0.0002, beta_1=0.5)\n",
    "    model.compile(loss='binary_crossentropy', optimizer=opt, metrics=['accuracy'])\n",
    "    return model\n",
    "\n",
    "\n",
    "# define the standalone generator model\n",
    "def define_generator(latent_dim):\n",
    "    model = Sequential()\n",
    "    # foundation for 4x4 image\n",
    "    n_nodes = 256 * 4 * 4\n",
    "    model.add(Dense(n_nodes, input_dim=latent_dim))\n",
    "    model.add(LeakyReLU(alpha=0.2))\n",
    "    model.add(Reshape((4, 4, 256)))\n",
    "    # upsample to 8x8\n",
    "    model.add(Conv2DTranspose(128, (4, 4), strides=(2, 2), padding='same'))\n",
    "    model.add(LeakyReLU(alpha=0.2))\n",
    "    # upsample to 16x16\n",
    "    model.add(Conv2DTranspose(128, (4, 4), strides=(2, 2), padding='same'))\n",
    "    model.add(LeakyReLU(alpha=0.2))\n",
    "    # upsample to 32x32\n",
    "    model.add(Conv2DTranspose(128, (4, 4), strides=(2, 2), padding='same'))\n",
    "    model.add(LeakyReLU(alpha=0.2))\n",
    "    # output layer\n",
    "    model.add(Conv2D(3, (3, 3), activation='tanh', padding='same'))\n",
    "    return model\n",
    "\n",
    "\n",
    "# define the combined generator and discriminator model, for updating the generator\n",
    "def define_gan(g_model, d_model):\n",
    "    # make weights in the discriminator not trainable\n",
    "    d_model.trainable = False\n",
    "    # connect them\n",
    "    model = Sequential()\n",
    "    # add generator\n",
    "    model.add(g_model)\n",
    "    # add the discriminator\n",
    "    model.add(d_model)\n",
    "    # compile model\n",
    "    opt = Adam(lr=0.0002, beta_1=0.5)\n",
    "    model.compile(loss='binary_crossentropy', optimizer=opt)\n",
    "    return model\n",
    "\n",
    "\n",
    "# load and prepare cifar10 training images\n",
    "def load_real_samples():\n",
    "    # load cifar10 dataset\n",
    "    (trainX, _), (_, _) = load_data()\n",
    "    # convert from unsigned ints to floats\n",
    "    X = trainX.astype('float32')\n",
    "    # scale from [0,255] to [-1,1]\n",
    "    X = (X - 127.5) / 127.5\n",
    "    return X\n",
    "\n",
    "\n",
    "# select real samples\n",
    "def generate_real_samples(dataset, n_samples):\n",
    "    # choose random instances\n",
    "    ix = randint(0, dataset.shape[0], n_samples)\n",
    "    # retrieve selected images\n",
    "    X = dataset[ix]\n",
    "    # generate 'real' class labels (1)\n",
    "    y = ones((n_samples, 1))\n",
    "    return X, y\n",
    "\n",
    "\n",
    "# generate points in latent space as input for the generator\n",
    "def generate_latent_points(latent_dim, n_samples):\n",
    "    # generate points in the latent space\n",
    "    x_input = randn(latent_dim * n_samples)\n",
    "    # reshape into a batch of inputs for the network\n",
    "    x_input = x_input.reshape(n_samples, latent_dim)\n",
    "    return x_input\n",
    "\n",
    "\n",
    "# use the generator to generate n fake examples, with class labels\n",
    "def generate_fake_samples(g_model, latent_dim, n_samples):\n",
    "    # generate points in latent space\n",
    "    x_input = generate_latent_points(latent_dim, n_samples)\n",
    "    # predict outputs\n",
    "    X = g_model.predict(x_input)\n",
    "    # create 'fake' class labels (0)\n",
    "    y = zeros((n_samples, 1))\n",
    "    return X, y\n",
    "\n",
    "\n",
    "# create and save a plot of generated images\n",
    "def save_plot(examples, epoch, n=7):\n",
    "    # scale from [-1,1] to [0,1]\n",
    "    examples = (examples + 1) / 2.0\n",
    "    # plot images\n",
    "    for i in range(n * n):\n",
    "        # define subplot\n",
    "        pyplot.subplot(n, n, 1 + i)\n",
    "        # turn off axis\n",
    "        pyplot.axis('off')\n",
    "        # plot raw pixel data\n",
    "        pyplot.imshow(examples[i])\n",
    "    # save plot to file\n",
    "    # filename = 'generated_plot_e%03d.png' % (epoch+1)\n",
    "    # pyplot.savefig(filename)\n",
    "    pyplot.show()\n",
    "\n",
    "\n",
    "# evaluate the discriminator, plot generated images, save generator model\n",
    "def summarize_performance(epoch, g_model, d_model, dataset, latent_dim, n_samples=150):\n",
    "    # prepare real samples\n",
    "    X_real, y_real = generate_real_samples(dataset, n_samples)\n",
    "    # evaluate discriminator on real examples\n",
    "    _, acc_real = d_model.evaluate(X_real, y_real, verbose=0)\n",
    "    # prepare fake examples\n",
    "    x_fake, y_fake = generate_fake_samples(g_model, latent_dim, n_samples)\n",
    "    # evaluate discriminator on fake examples\n",
    "    _, acc_fake = d_model.evaluate(x_fake, y_fake, verbose=0)\n",
    "    # summarize discriminator performance\n",
    "    print('>Accuracy real: %.0f%%, fake: %.0f%%' % (acc_real * 100, acc_fake * 100))\n",
    "    # save plot\n",
    "    save_plot(x_fake, epoch)\n",
    "    # save the generator model tile file\n",
    "    filename = 'generator_model.h5'\n",
    "    g_model.save(filename)\n",
    "\n",
    "\n",
    "# train the generator and discriminator\n",
    "def train(g_model, d_model, gan_model, dataset, latent_dim, n_epochs=200, n_batch=128):\n",
    "    bat_per_epo = int(dataset.shape[0] / n_batch)\n",
    "    half_batch = int(n_batch / 2)\n",
    "    # manually enumerate epochs\n",
    "    for i in range(n_epochs):\n",
    "        # enumerate batches over the training set\n",
    "        for j in range(bat_per_epo):\n",
    "            # get randomly selected 'real' samples\n",
    "            X_real, y_real = generate_real_samples(dataset, half_batch)\n",
    "            # update discriminator model weights\n",
    "            d_loss1, _ = d_model.train_on_batch(X_real, y_real)\n",
    "            # generate 'fake' examples\n",
    "            X_fake, y_fake = generate_fake_samples(g_model, latent_dim, half_batch)\n",
    "            # update discriminator model weights\n",
    "            d_loss2, _ = d_model.train_on_batch(X_fake, y_fake)\n",
    "            # prepare points in latent space as input for the generator\n",
    "            X_gan = generate_latent_points(latent_dim, n_batch)\n",
    "            # create inverted labels for the fake samples\n",
    "            y_gan = ones((n_batch, 1))\n",
    "            # update the generator via the discriminator's error\n",
    "            g_loss = gan_model.train_on_batch(X_gan, y_gan)\n",
    "            # summarize loss on this batch\n",
    "            if j % 100 == 0:\n",
    "                print('>%d, %d/%d, d1=%.3f, d2=%.3f g=%.3f' % (i + 1, j + 1, bat_per_epo, d_loss1, d_loss2, g_loss))\n",
    "        # evaluate the model performance, sometimes\n",
    "        # if (i+1) % 10 == 0:\n",
    "        summarize_performance(i, g_model, d_model, dataset, latent_dim)\n",
    "\n",
    "\n",
    "# size of the latent space\n",
    "latent_dim = 100\n",
    "# create the discriminator\n",
    "d_model = define_discriminator()\n",
    "# create the generator\n",
    "g_model = define_generator(latent_dim)\n",
    "# create the gan\n",
    "gan_model = define_gan(g_model, d_model)\n",
    "# load image data\n",
    "dataset = load_real_samples()\n",
    "# train model\n",
    "train(g_model, d_model, gan_model, dataset, latent_dim, 20, 256)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "02b12ed0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Random Seed:  999\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<torch._C.Generator at 0x2406d4e1d50>"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import argparse\n",
    "import os\n",
    "import random\n",
    "import torch\n",
    "import torch.nn as nn\n",
    "import torch.nn.parallel\n",
    "import torch.backends.cudnn as cudnn\n",
    "import torch.optim as optim\n",
    "import torch.utils.data\n",
    "import torchvision.datasets as dset\n",
    "import torchvision.transforms as transforms\n",
    "import torchvision.utils as vutils\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import matplotlib.animation as animation\n",
    "from IPython.display import HTML\n",
    "from torchvision import datasets, transforms\n",
    "\n",
    "# Set random seed for reproducibility\n",
    "manualSeed = 999\n",
    "#manualSeed = random.randint(1, 10000) # This will generate a random seed\n",
    "print(\"Random Seed: \", manualSeed)\n",
    "random.seed(manualSeed)\n",
    "torch.manual_seed(manualSeed)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "f1f1ba37",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Files already downloaded and verified\n",
      "Files already downloaded and verified\n"
     ]
    }
   ],
   "source": [
    "transform = transforms.Compose(\n",
    "    [transforms.ToTensor(),\n",
    "     transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))])\n",
    " \n",
    "trainset = datasets.CIFAR10(root='./data', train=True,\n",
    "                                        download=True, transform=transform)\n",
    "trainloader = torch.utils.data.DataLoader(trainset, batch_size=128,\n",
    "                                          shuffle=True, num_workers=2)\n",
    " \n",
    "testset = datasets.CIFAR10(root='./data', train=False,\n",
    "                                       download=True, transform=transform)\n",
    "testloader = torch.utils.data.DataLoader(testset, batch_size=128,\n",
    "                                         shuffle=False, num_workers=2)\n",
    " \n",
    "classes = ('plane', 'car', 'bird', 'cat',\n",
    "           'deer', 'dog', 'frog', 'horse', 'ship', 'truck')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7faa6e56",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Helper function, that takes a whole batch of images and shows them as a combined image\n",
    "def imshow(img):\n",
    "  npimg = img.numpy()\n",
    "  plt.imshow(np.transpose(npimg, (1, 2, 0)))\n",
    "  plt.show()\n",
    " \n",
    "# We will take one batch of data and show the distribution of pixels in one sample image\n",
    "data_iter = iter(trainloader)\n",
    "images, labels = data_iter.next()\n",
    "imshow(torchvision.utils.make_grid(images))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "1e240938",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Creating a function that will create a normal distribution of weights to the Convolutional layers\n",
    "def init_normal(m):\n",
    "    classname = m.__class__.__name__\n",
    " \n",
    "    if classname.find('Conv') != -1:\n",
    "        nn.init.normal_(m.weight.data, 0.0, 0.02)\n",
    "    elif classname.find('BatchNorm') != -1:\n",
    "        nn.init.normal_(m.weight.data, 1.0, 0.02)\n",
    "        nn.init.constant_(m.bias.data, 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "1043a5c1",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Creating a function that will create a normal distribution of weights to the Convolutional layers\n",
    "def init_normal(m):\n",
    "    classname = m.__class__.__name__\n",
    " \n",
    "    if classname.find('Conv') != -1:\n",
    "        nn.init.normal_(m.weight.data, 0.0, 0.02)\n",
    "    elif classname.find('BatchNorm') != -1:\n",
    "        nn.init.normal_(m.weight.data, 1.0, 0.02)\n",
    "        nn.init.constant_(m.bias.data, 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "9c0502e9",
   "metadata": {},
   "outputs": [],
   "source": [
    "class Discriminator(nn.Module):\n",
    "    def __init__(self):\n",
    "        super(Discriminator, self).__init__()\n",
    "        self.conv1 = nn.Conv2d(3              , feature_map    , 4, 2, 1, bias=False)\n",
    "        self.conv2 = nn.Conv2d(feature_map    , feature_map * 2, 4, 2, 1, bias=False)\n",
    "        self.conv3 = nn.Conv2d(feature_map * 2, feature_map * 4, 4, 2, 1, bias=False)\n",
    "        self.conv4 = nn.Conv2d(feature_map * 4, feature_map * 8, 4, 2, 1, bias=False)\n",
    "        self.conv5 = nn.Conv2d(feature_map * 8, 1              , 4, 1, 0, bias=False)\n",
    " \n",
    "        self.bnorm1 = nn.BatchNorm2d(feature_map*2)\n",
    "        self.bnorm2 = nn.BatchNorm2d(feature_map*4)\n",
    "        self.bnorm3 = nn.BatchNorm2d(feature_map*8)\n",
    " \n",
    "        self.LeakyReLU = nn.LeakyReLU(0.2, inplace=True)\n",
    "        self.sigmoid = nn.Sigmoid()\n",
    " \n",
    "    def forward(self, x):\n",
    "        x = F.leaky_relu(self.conv1(x))\n",
    " \n",
    "        x = self.conv2(x)\n",
    "        x = F.leaky_relu(self.bnorm1(x))\n",
    " \n",
    "        x = self.conv3(x)\n",
    "        x = F.leaky_relu(self.bnorm2(x))\n",
    "        \n",
    "        x = self.conv4(x)\n",
    "        x = F.leaky_relu(self.bnorm3(x))\n",
    " \n",
    "        x = self.conv5(x)\n",
    "        x = self.sigmoid(x)\n",
    "        return x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "840a95ed",
   "metadata": {},
   "outputs": [],
   "source": [
    "feature_map       = 64\n",
    "latent_space_size = 100\n",
    " \n",
    "class Generator(nn.Module):\n",
    "    def __init__(self):\n",
    "        super(Generator, self).__init__()\n",
    " \n",
    "        self.convTranspose1 = nn.ConvTranspose2d( latent_space_size, feature_map * 8, 4, 1, 0, bias=False)\n",
    "        self.convTranspose2 = nn.ConvTranspose2d( feature_map * 8  , feature_map * 4, 4, 2, 1, bias=False)\n",
    "        self.convTranspose3 = nn.ConvTranspose2d( feature_map * 4  , feature_map * 2, 4, 2, 1, bias=False)\n",
    "        self.convTranspose4 = nn.ConvTranspose2d( feature_map * 2  , feature_map * 1, 4, 2, 1, bias=False)\n",
    "        self.convTranspose5 = nn.ConvTranspose2d( feature_map * 1  , 3              , 4, 2, 1, bias=False)\n",
    " \n",
    "        self.bnorm1 = nn.BatchNorm2d(feature_map * 8)\n",
    "        self.bnorm2 = nn.BatchNorm2d(feature_map * 4)\n",
    "        self.bnorm3 = nn.BatchNorm2d(feature_map * 2)\n",
    "        self.bnorm4 = nn.BatchNorm2d(feature_map * 1)\n",
    " \n",
    "    def forward(self, x):\n",
    "        x = self.convTranspose1(x)\n",
    "        x = F.relu(self.bnorm1(x))\n",
    " \n",
    "        x = self.convTranspose2(x)\n",
    "        x = F.relu(self.bnorm2(x))\n",
    " \n",
    "        x = self.convTranspose3(x)\n",
    "        x = F.relu(self.bnorm3(x))\n",
    " \n",
    "        x = self.convTranspose4(x)\n",
    "        x = F.relu(self.bnorm4(x))\n",
    " \n",
    "        x = self.convTranspose5(x)\n",
    "        x = torch.tanh(x)\n",
    "        return x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "5c6986ae",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting device\n",
      "  Downloading device-0.1.tar.gz (3.1 kB)\n",
      "  Preparing metadata (setup.py): started\n",
      "  Preparing metadata (setup.py): finished with status 'done'\n",
      "Collecting requests==2.0.0 (from device)\n",
      "  Downloading requests-2.0.0-py2.py3-none-any.whl (391 kB)\n",
      "     ---------------------------------------- 0.0/391.1 kB ? eta -:--:--\n",
      "     --- ----------------------------------- 30.7/391.1 kB 1.4 MB/s eta 0:00:01\n",
      "     ------------- ------------------------ 143.4/391.1 kB 2.1 MB/s eta 0:00:01\n",
      "     ------------------------------ ------- 317.4/391.1 kB 2.5 MB/s eta 0:00:01\n",
      "     -------------------------------------- 391.1/391.1 kB 2.7 MB/s eta 0:00:00\n",
      "Building wheels for collected packages: device\n",
      "  Building wheel for device (setup.py): started\n",
      "  Building wheel for device (setup.py): finished with status 'done'\n",
      "  Created wheel for device: filename=device-0.1-py3-none-any.whl size=3339 sha256=d428644936ada80e1de5e1501f0356d755abfd369c679d9b4e046280957577af\n",
      "  Stored in directory: c:\\users\\vaish\\appdata\\local\\pip\\cache\\wheels\\8e\\59\\5d\\e836cc8bdf3cf903b890eb6527779e88b950591903c6fcd8f3\n",
      "Successfully built device\n",
      "Installing collected packages: requests, device\n",
      "  Attempting uninstall: requests\n",
      "    Found existing installation: requests 2.31.0\n",
      "    Uninstalling requests-2.31.0:\n",
      "      Successfully uninstalled requests-2.31.0\n",
      "Successfully installed device-0.1 requests-2.0.0\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "ERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n",
      "conda-repo-cli 1.0.75 requires requests_mock, which is not installed.\n",
      "anaconda-client 1.12.1 requires requests>=2.20.0, but you have requests 2.0.0 which is incompatible.\n",
      "conda 23.7.4 requires requests<3,>=2.27.0, but you have requests 2.0.0 which is incompatible.\n",
      "conda-repo-cli 1.0.75 requires clyent==1.2.1, but you have clyent 1.2.2 which is incompatible.\n",
      "conda-repo-cli 1.0.75 requires PyYAML==6.0.1, but you have pyyaml 6.0 which is incompatible.\n",
      "conda-repo-cli 1.0.75 requires requests==2.31.0, but you have requests 2.0.0 which is incompatible.\n",
      "cookiecutter 1.7.3 requires requests>=2.23.0, but you have requests 2.0.0 which is incompatible.\n",
      "datasets 2.12.0 requires requests>=2.19.0, but you have requests 2.0.0 which is incompatible.\n",
      "jupyterlab-server 2.22.0 requires requests>=2.28, but you have requests 2.0.0 which is incompatible.\n",
      "requests-toolbelt 1.0.0 requires requests<3.0.0,>=2.0.1, but you have requests 2.0.0 which is incompatible.\n",
      "spacy 3.7.2 requires requests<3.0.0,>=2.13.0, but you have requests 2.0.0 which is incompatible.\n",
      "sphinx 5.0.2 requires requests>=2.5.0, but you have requests 2.0.0 which is incompatible.\n",
      "tensorboard 2.15.1 requires requests<3,>=2.21.0, but you have requests 2.0.0 which is incompatible.\n",
      "tldextract 3.2.0 requires requests>=2.1.0, but you have requests 2.0.0 which is incompatible.\n",
      "weasel 0.3.4 requires requests<3.0.0,>=2.13.0, but you have requests 2.0.0 which is incompatible.\n"
     ]
    }
   ],
   "source": [
    "pip install device"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "2d38826b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "ERROR: Could not find a version that satisfies the requirement BCELoss (from versions: none)\n",
      "ERROR: No matching distribution found for BCELoss\n"
     ]
    }
   ],
   "source": [
    "pip install BCELoss"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "7d16bc28",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "ERROR: Could not find a version that satisfies the requirement trainloader (from versions: none)\n",
      "ERROR: No matching distribution found for trainloader\n"
     ]
    }
   ],
   "source": [
    "pip install trainloader"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "73fa6ecd",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'BCELoss' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[1], line 2\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;66;03m# Initialize BCELoss function\u001b[39;00m\n\u001b[1;32m----> 2\u001b[0m criterion \u001b[38;5;241m=\u001b[39m BCELoss()\n\u001b[0;32m      4\u001b[0m \u001b[38;5;66;03m# Models\u001b[39;00m\n\u001b[0;32m      5\u001b[0m generator \u001b[38;5;241m=\u001b[39m     Generator()\u001b[38;5;241m.\u001b[39mto(device)\n",
      "\u001b[1;31mNameError\u001b[0m: name 'BCELoss' is not defined"
     ]
    }
   ],
   "source": [
    "# Initialize BCELoss function\n",
    "criterion = BCELoss()\n",
    " \n",
    "# Models\n",
    "generator =     Generator().to(device)\n",
    "discriminator = Discriminator().to(device)\n",
    " \n",
    "# Use the modules apply function to recursively apply the initialization\n",
    "generator.apply(init_normal)\n",
    "discriminator.apply(init_normal)\n",
    " \n",
    "# Optimizers\n",
    "generator_optimizer = torch.optim.Adam(generator.parameters(),     lr=0.0002)\n",
    "discriminator_optimizer = torch.optim.Adam(discriminator.parameters(), lr=0.0002)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "860ceb28",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Generate a random latent space of 100 elements which we will use to transform to an image\n",
    "z = generate_latent_vectors_z(len(real_data)).to(device)\n",
    "fake_data = generator(z)\n",
    "plt.imshow(fake_data[10].cpu().permute(1, 2, 0).detach().numpy())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "14aef173",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "ERROR: Could not find a version that satisfies the requirement enerate_latent_vectors_z (from versions: none)\n",
      "ERROR: No matching distribution found for enerate_latent_vectors_z\n"
     ]
    }
   ],
   "source": [
    "pip install enerate_latent_vectors_z"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "575d3a36",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "ERROR: Could not find a version that satisfies the requirement real_data (from versions: none)\n",
      "ERROR: No matching distribution found for real_data\n"
     ]
    }
   ],
   "source": [
    "pip install real_data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "01f4c8c2",
   "metadata": {},
   "source": [
    "# Explore the Latent Space when Generating images"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "7740c859",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting fastai\n",
      "  Obtaining dependency information for fastai from https://files.pythonhosted.org/packages/b4/44/25472496c58a9c4aa43465ae8daffb4452ebbe61b43342fe0f8a53ed836b/fastai-2.7.13-py3-none-any.whl.metadata\n",
      "  Using cached fastai-2.7.13-py3-none-any.whl.metadata (9.6 kB)\n",
      "Requirement already satisfied: pip in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from fastai) (23.2.1)\n",
      "Requirement already satisfied: packaging in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from fastai) (23.1)\n",
      "Collecting fastdownload<2,>=0.0.5 (from fastai)\n",
      "  Using cached fastdownload-0.0.7-py3-none-any.whl (12 kB)\n",
      "Collecting fastcore<1.6,>=1.5.29 (from fastai)\n",
      "  Using cached fastcore-1.5.29-py3-none-any.whl (67 kB)\n",
      "Requirement already satisfied: torchvision>=0.11 in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from fastai) (0.16.0)\n",
      "Requirement already satisfied: matplotlib in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from fastai) (3.7.2)\n",
      "Requirement already satisfied: pandas in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from fastai) (2.0.3)\n",
      "Requirement already satisfied: requests in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from fastai) (2.31.0)\n",
      "Requirement already satisfied: pyyaml in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from fastai) (6.0)\n",
      "Collecting fastprogress>=0.2.4 (from fastai)\n",
      "  Using cached fastprogress-1.0.3-py3-none-any.whl (12 kB)\n",
      "Requirement already satisfied: pillow>=9.0.0 in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from fastai) (9.4.0)\n",
      "Requirement already satisfied: scikit-learn in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from fastai) (1.3.2)\n",
      "Requirement already satisfied: scipy in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from fastai) (1.11.1)\n",
      "Collecting spacy<4 (from fastai)\n",
      "  Obtaining dependency information for spacy<4 from https://files.pythonhosted.org/packages/90/f0/0133b684e18932c7bf4075d94819746cee2c0329f2569db526b0fa1df1df/spacy-3.7.2-cp311-cp311-win_amd64.whl.metadata\n",
      "  Using cached spacy-3.7.2-cp311-cp311-win_amd64.whl.metadata (26 kB)\n",
      "Requirement already satisfied: torch<2.2,>=1.10 in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from fastai) (2.1.0)\n",
      "Collecting spacy-legacy<3.1.0,>=3.0.11 (from spacy<4->fastai)\n",
      "  Using cached spacy_legacy-3.0.12-py2.py3-none-any.whl (29 kB)\n",
      "Collecting spacy-loggers<2.0.0,>=1.0.0 (from spacy<4->fastai)\n",
      "  Obtaining dependency information for spacy-loggers<2.0.0,>=1.0.0 from https://files.pythonhosted.org/packages/33/78/d1a1a026ef3af911159398c939b1509d5c36fe524c7b644f34a5146c4e16/spacy_loggers-1.0.5-py3-none-any.whl.metadata\n",
      "  Using cached spacy_loggers-1.0.5-py3-none-any.whl.metadata (23 kB)\n",
      "Collecting murmurhash<1.1.0,>=0.28.0 (from spacy<4->fastai)\n",
      "  Obtaining dependency information for murmurhash<1.1.0,>=0.28.0 from https://files.pythonhosted.org/packages/71/46/af01a20ec368bd9cb49a1d2df15e3eca113bbf6952cc1f2a47f1c6801a7f/murmurhash-1.0.10-cp311-cp311-win_amd64.whl.metadata\n",
      "  Using cached murmurhash-1.0.10-cp311-cp311-win_amd64.whl.metadata (2.0 kB)\n",
      "Collecting cymem<2.1.0,>=2.0.2 (from spacy<4->fastai)\n",
      "  Obtaining dependency information for cymem<2.1.0,>=2.0.2 from https://files.pythonhosted.org/packages/c1/c3/dd044e6f62a3d317c461f6f0c153c6573ed13025752d779e514000c15dd2/cymem-2.0.8-cp311-cp311-win_amd64.whl.metadata\n",
      "  Using cached cymem-2.0.8-cp311-cp311-win_amd64.whl.metadata (8.6 kB)\n",
      "Collecting preshed<3.1.0,>=3.0.2 (from spacy<4->fastai)\n",
      "  Obtaining dependency information for preshed<3.1.0,>=3.0.2 from https://files.pythonhosted.org/packages/e4/fc/78cdbdb79f5d6d45949e72c32445d6c060977ad50a1dcfc0392622165f7c/preshed-3.0.9-cp311-cp311-win_amd64.whl.metadata\n",
      "  Using cached preshed-3.0.9-cp311-cp311-win_amd64.whl.metadata (2.2 kB)\n",
      "Collecting thinc<8.3.0,>=8.1.8 (from spacy<4->fastai)\n",
      "  Obtaining dependency information for thinc<8.3.0,>=8.1.8 from https://files.pythonhosted.org/packages/dd/e9/c806bd2b281cc4cb5eea9375c3f45f6c4ff293877f469bb38d78a4f1cf96/thinc-8.2.1-cp311-cp311-win_amd64.whl.metadata\n",
      "  Using cached thinc-8.2.1-cp311-cp311-win_amd64.whl.metadata (15 kB)\n",
      "Collecting wasabi<1.2.0,>=0.9.1 (from spacy<4->fastai)\n",
      "  Obtaining dependency information for wasabi<1.2.0,>=0.9.1 from https://files.pythonhosted.org/packages/8f/69/26cbf0bad11703241cb84d5324d868097f7a8faf2f1888354dac8883f3fc/wasabi-1.1.2-py3-none-any.whl.metadata\n",
      "  Using cached wasabi-1.1.2-py3-none-any.whl.metadata (28 kB)\n",
      "Collecting srsly<3.0.0,>=2.4.3 (from spacy<4->fastai)\n",
      "  Obtaining dependency information for srsly<3.0.0,>=2.4.3 from https://files.pythonhosted.org/packages/eb/f5/e3f29993f673d91623df6413ba64e815dd2676fd7932cbc5e7347402ddae/srsly-2.4.8-cp311-cp311-win_amd64.whl.metadata\n",
      "  Using cached srsly-2.4.8-cp311-cp311-win_amd64.whl.metadata (20 kB)\n",
      "Collecting catalogue<2.1.0,>=2.0.6 (from spacy<4->fastai)\n",
      "  Obtaining dependency information for catalogue<2.1.0,>=2.0.6 from https://files.pythonhosted.org/packages/9e/96/d32b941a501ab566a16358d68b6eb4e4acc373fab3c3c4d7d9e649f7b4bb/catalogue-2.0.10-py3-none-any.whl.metadata\n",
      "  Using cached catalogue-2.0.10-py3-none-any.whl.metadata (14 kB)\n",
      "Collecting weasel<0.4.0,>=0.1.0 (from spacy<4->fastai)\n",
      "  Obtaining dependency information for weasel<0.4.0,>=0.1.0 from https://files.pythonhosted.org/packages/d5/e5/b63b8e255d89ba4155972990d42523251d4d1368c4906c646597f63870e2/weasel-0.3.4-py3-none-any.whl.metadata\n",
      "  Using cached weasel-0.3.4-py3-none-any.whl.metadata (4.7 kB)\n",
      "Collecting typer<0.10.0,>=0.3.0 (from spacy<4->fastai)\n",
      "  Using cached typer-0.9.0-py3-none-any.whl (45 kB)\n",
      "Requirement already satisfied: smart-open<7.0.0,>=5.2.1 in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from spacy<4->fastai) (5.2.1)\n",
      "Requirement already satisfied: tqdm<5.0.0,>=4.38.0 in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from spacy<4->fastai) (4.65.0)\n",
      "Requirement already satisfied: pydantic!=1.8,!=1.8.1,<3.0.0,>=1.7.4 in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from spacy<4->fastai) (1.10.8)\n",
      "Requirement already satisfied: jinja2 in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from spacy<4->fastai) (3.1.2)\n",
      "Requirement already satisfied: setuptools in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from spacy<4->fastai) (68.0.0)\n",
      "Collecting langcodes<4.0.0,>=3.2.0 (from spacy<4->fastai)\n",
      "  Using cached langcodes-3.3.0-py3-none-any.whl (181 kB)\n",
      "Requirement already satisfied: numpy>=1.19.0 in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from spacy<4->fastai) (1.24.3)\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from requests->fastai) (2.0.4)\n",
      "Requirement already satisfied: idna<4,>=2.5 in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from requests->fastai) (3.4)\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from requests->fastai) (1.26.16)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from requests->fastai) (2023.7.22)\n",
      "Requirement already satisfied: filelock in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from torch<2.2,>=1.10->fastai) (3.9.0)\n",
      "Requirement already satisfied: typing-extensions in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from torch<2.2,>=1.10->fastai) (4.7.1)\n",
      "Requirement already satisfied: sympy in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from torch<2.2,>=1.10->fastai) (1.11.1)\n",
      "Requirement already satisfied: networkx in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from torch<2.2,>=1.10->fastai) (3.1)\n",
      "Requirement already satisfied: fsspec in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from torch<2.2,>=1.10->fastai) (2023.4.0)\n",
      "Requirement already satisfied: contourpy>=1.0.1 in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from matplotlib->fastai) (1.0.5)\n",
      "Requirement already satisfied: cycler>=0.10 in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from matplotlib->fastai) (0.11.0)\n",
      "Requirement already satisfied: fonttools>=4.22.0 in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from matplotlib->fastai) (4.25.0)\n",
      "Requirement already satisfied: kiwisolver>=1.0.1 in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from matplotlib->fastai) (1.4.4)\n",
      "Requirement already satisfied: pyparsing<3.1,>=2.3.1 in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from matplotlib->fastai) (3.0.9)\n",
      "Requirement already satisfied: python-dateutil>=2.7 in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from matplotlib->fastai) (2.8.2)\n",
      "Requirement already satisfied: pytz>=2020.1 in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from pandas->fastai) (2023.3.post1)\n",
      "Requirement already satisfied: tzdata>=2022.1 in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from pandas->fastai) (2023.3)\n",
      "Requirement already satisfied: joblib>=1.1.1 in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from scikit-learn->fastai) (1.2.0)\n",
      "Requirement already satisfied: threadpoolctl>=2.0.0 in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from scikit-learn->fastai) (2.2.0)\n",
      "Requirement already satisfied: six>=1.5 in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from python-dateutil>=2.7->matplotlib->fastai) (1.16.0)\n",
      "Collecting blis<0.8.0,>=0.7.8 (from thinc<8.3.0,>=8.1.8->spacy<4->fastai)\n",
      "  Obtaining dependency information for blis<0.8.0,>=0.7.8 from https://files.pythonhosted.org/packages/2f/09/da0592c74560cc33396504698122f7a56747c82a5e072ca7d2c3397898e1/blis-0.7.11-cp311-cp311-win_amd64.whl.metadata\n",
      "  Using cached blis-0.7.11-cp311-cp311-win_amd64.whl.metadata (7.6 kB)\n",
      "Collecting confection<1.0.0,>=0.0.1 (from thinc<8.3.0,>=8.1.8->spacy<4->fastai)\n",
      "  Obtaining dependency information for confection<1.0.0,>=0.0.1 from https://files.pythonhosted.org/packages/93/f8/e89268a1f885048fb2ee6b5c9f93c4e90de768534acfef3652f87d97d4cb/confection-0.1.3-py3-none-any.whl.metadata\n",
      "  Using cached confection-0.1.3-py3-none-any.whl.metadata (19 kB)\n",
      "Requirement already satisfied: colorama in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from tqdm<5.0.0,>=4.38.0->spacy<4->fastai) (0.4.6)\n",
      "Requirement already satisfied: click<9.0.0,>=7.1.1 in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from typer<0.10.0,>=0.3.0->spacy<4->fastai) (8.0.4)\n",
      "Collecting cloudpathlib<0.17.0,>=0.7.0 (from weasel<0.4.0,>=0.1.0->spacy<4->fastai)\n",
      "  Obtaining dependency information for cloudpathlib<0.17.0,>=0.7.0 from https://files.pythonhosted.org/packages/0f/6e/45b57a7d4573d85d0b0a39d99673dc1f5eea9d92a1a4603b35e968fbf89a/cloudpathlib-0.16.0-py3-none-any.whl.metadata\n",
      "  Using cached cloudpathlib-0.16.0-py3-none-any.whl.metadata (14 kB)\n",
      "Requirement already satisfied: MarkupSafe>=2.0 in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from jinja2->spacy<4->fastai) (2.1.1)\n",
      "Requirement already satisfied: mpmath>=0.19 in f:\\users\\vaish\\anaconda3\\lib\\site-packages (from sympy->torch<2.2,>=1.10->fastai) (1.3.0)\n",
      "Using cached fastai-2.7.13-py3-none-any.whl (232 kB)\n",
      "Downloading spacy-3.7.2-cp311-cp311-win_amd64.whl (12.1 MB)\n",
      "   ---------------------------------------- 0.0/12.1 MB ? eta -:--:--\n",
      "   ---------------------------------------- 0.0/12.1 MB 660.6 kB/s eta 0:00:19\n",
      "   ---------------------------------------- 0.1/12.1 MB 975.2 kB/s eta 0:00:13\n",
      "    --------------------------------------- 0.3/12.1 MB 2.2 MB/s eta 0:00:06\n",
      "   - -------------------------------------- 0.4/12.1 MB 2.3 MB/s eta 0:00:06\n",
      "   - -------------------------------------- 0.5/12.1 MB 2.4 MB/s eta 0:00:05\n",
      "   -- ------------------------------------- 0.6/12.1 MB 2.4 MB/s eta 0:00:05\n",
      "   -- ------------------------------------- 0.8/12.1 MB 2.4 MB/s eta 0:00:05\n",
      "   -- ------------------------------------- 0.9/12.1 MB 2.5 MB/s eta 0:00:05\n",
      "   --- ------------------------------------ 1.1/12.1 MB 2.6 MB/s eta 0:00:05\n",
      "   --- ------------------------------------ 1.1/12.1 MB 2.6 MB/s eta 0:00:05\n",
      "   ---- ----------------------------------- 1.3/12.1 MB 2.6 MB/s eta 0:00:05\n",
      "   ---- ----------------------------------- 1.4/12.1 MB 2.5 MB/s eta 0:00:05\n",
      "   ---- ----------------------------------- 1.5/12.1 MB 2.4 MB/s eta 0:00:05\n",
      "   ----- ---------------------------------- 1.6/12.1 MB 2.4 MB/s eta 0:00:05\n",
      "   ----- ---------------------------------- 1.7/12.1 MB 2.4 MB/s eta 0:00:05\n",
      "   ----- ---------------------------------- 1.8/12.1 MB 2.4 MB/s eta 0:00:05\n",
      "   ------ --------------------------------- 1.9/12.1 MB 2.3 MB/s eta 0:00:05\n",
      "   ------ --------------------------------- 2.0/12.1 MB 2.4 MB/s eta 0:00:05\n",
      "   ------ --------------------------------- 2.1/12.1 MB 2.4 MB/s eta 0:00:05\n",
      "   ------- -------------------------------- 2.2/12.1 MB 2.3 MB/s eta 0:00:05\n",
      "   ------- -------------------------------- 2.3/12.1 MB 2.3 MB/s eta 0:00:05\n",
      "   ------- -------------------------------- 2.4/12.1 MB 2.3 MB/s eta 0:00:05\n",
      "   -------- ------------------------------- 2.5/12.1 MB 2.3 MB/s eta 0:00:05\n",
      "   -------- ------------------------------- 2.5/12.1 MB 2.2 MB/s eta 0:00:05\n",
      "   -------- ------------------------------- 2.6/12.1 MB 2.2 MB/s eta 0:00:05\n",
      "   -------- ------------------------------- 2.7/12.1 MB 2.2 MB/s eta 0:00:05\n",
      "   --------- ------------------------------ 2.8/12.1 MB 2.2 MB/s eta 0:00:05\n",
      "   --------- ------------------------------ 2.8/12.1 MB 2.2 MB/s eta 0:00:05\n",
      "   --------- ------------------------------ 2.9/12.1 MB 2.1 MB/s eta 0:00:05\n",
      "   ---------- ----------------------------- 3.0/12.1 MB 2.1 MB/s eta 0:00:05\n",
      "   ---------- ----------------------------- 3.1/12.1 MB 2.1 MB/s eta 0:00:05\n",
      "   ---------- ----------------------------- 3.2/12.1 MB 2.1 MB/s eta 0:00:05\n",
      "   ---------- ----------------------------- 3.3/12.1 MB 2.1 MB/s eta 0:00:05\n",
      "   ----------- ---------------------------- 3.4/12.1 MB 2.1 MB/s eta 0:00:05\n",
      "   ----------- ---------------------------- 3.5/12.1 MB 2.1 MB/s eta 0:00:04\n",
      "   ------------ --------------------------- 3.7/12.1 MB 2.1 MB/s eta 0:00:04\n",
      "   ------------ --------------------------- 3.7/12.1 MB 2.1 MB/s eta 0:00:04\n",
      "   ------------ --------------------------- 3.8/12.1 MB 2.1 MB/s eta 0:00:04\n",
      "   ------------- -------------------------- 3.9/12.1 MB 2.1 MB/s eta 0:00:04\n",
      "   ------------- -------------------------- 4.1/12.1 MB 2.1 MB/s eta 0:00:04\n",
      "   ------------- -------------------------- 4.2/12.1 MB 2.1 MB/s eta 0:00:04\n",
      "   -------------- ------------------------- 4.2/12.1 MB 2.1 MB/s eta 0:00:04\n",
      "   -------------- ------------------------- 4.4/12.1 MB 2.2 MB/s eta 0:00:04\n",
      "   --------------- ------------------------ 4.5/12.1 MB 2.2 MB/s eta 0:00:04\n",
      "   --------------- ------------------------ 4.7/12.1 MB 2.2 MB/s eta 0:00:04\n",
      "   --------------- ------------------------ 4.8/12.1 MB 2.2 MB/s eta 0:00:04\n",
      "   ---------------- ----------------------- 5.0/12.1 MB 2.2 MB/s eta 0:00:04\n",
      "   ---------------- ----------------------- 5.0/12.1 MB 2.2 MB/s eta 0:00:04\n",
      "   ----------------- ---------------------- 5.1/12.1 MB 2.2 MB/s eta 0:00:04\n",
      "   ----------------- ---------------------- 5.2/12.1 MB 2.2 MB/s eta 0:00:04\n",
      "   ----------------- ---------------------- 5.3/12.1 MB 2.2 MB/s eta 0:00:04\n",
      "   ------------------ --------------------- 5.5/12.1 MB 2.2 MB/s eta 0:00:04\n",
      "   ------------------ --------------------- 5.6/12.1 MB 2.2 MB/s eta 0:00:03\n",
      "   ------------------ --------------------- 5.7/12.1 MB 2.2 MB/s eta 0:00:03\n",
      "   ------------------- -------------------- 5.8/12.1 MB 2.2 MB/s eta 0:00:03\n",
      "   ------------------- -------------------- 5.9/12.1 MB 2.2 MB/s eta 0:00:03\n",
      "   ------------------- -------------------- 6.0/12.1 MB 2.2 MB/s eta 0:00:03\n",
      "   -------------------- ------------------- 6.1/12.1 MB 2.2 MB/s eta 0:00:03\n",
      "   -------------------- ------------------- 6.2/12.1 MB 2.2 MB/s eta 0:00:03\n",
      "   --------------------- ------------------ 6.4/12.1 MB 2.2 MB/s eta 0:00:03\n",
      "   --------------------- ------------------ 6.5/12.1 MB 2.2 MB/s eta 0:00:03\n",
      "   --------------------- ------------------ 6.6/12.1 MB 2.2 MB/s eta 0:00:03\n",
      "   ---------------------- ----------------- 6.7/12.1 MB 2.2 MB/s eta 0:00:03\n",
      "   ---------------------- ----------------- 6.8/12.1 MB 2.2 MB/s eta 0:00:03\n",
      "   ---------------------- ----------------- 6.9/12.1 MB 2.2 MB/s eta 0:00:03\n",
      "   ----------------------- ---------------- 7.0/12.1 MB 2.2 MB/s eta 0:00:03\n",
      "   ----------------------- ---------------- 7.0/12.1 MB 2.2 MB/s eta 0:00:03\n",
      "   ----------------------- ---------------- 7.2/12.1 MB 2.2 MB/s eta 0:00:03\n",
      "   ------------------------ --------------- 7.2/12.1 MB 2.2 MB/s eta 0:00:03\n",
      "   ------------------------ --------------- 7.4/12.1 MB 2.2 MB/s eta 0:00:03\n",
      "   ------------------------ --------------- 7.5/12.1 MB 2.2 MB/s eta 0:00:03\n",
      "   ------------------------- -------------- 7.5/12.1 MB 2.2 MB/s eta 0:00:03\n",
      "   ------------------------- -------------- 7.7/12.1 MB 2.2 MB/s eta 0:00:03\n",
      "   ------------------------- -------------- 7.8/12.1 MB 2.2 MB/s eta 0:00:02\n",
      "   -------------------------- ------------- 7.9/12.1 MB 2.2 MB/s eta 0:00:02\n",
      "   -------------------------- ------------- 8.0/12.1 MB 2.2 MB/s eta 0:00:02\n",
      "   --------------------------- ------------ 8.2/12.1 MB 2.2 MB/s eta 0:00:02\n",
      "   --------------------------- ------------ 8.3/12.1 MB 2.2 MB/s eta 0:00:02\n",
      "   --------------------------- ------------ 8.4/12.1 MB 2.2 MB/s eta 0:00:02\n",
      "   ---------------------------- ----------- 8.6/12.1 MB 2.2 MB/s eta 0:00:02\n",
      "   ---------------------------- ----------- 8.7/12.1 MB 2.2 MB/s eta 0:00:02\n",
      "   ----------------------------- ---------- 8.8/12.1 MB 2.2 MB/s eta 0:00:02\n",
      "   ----------------------------- ---------- 8.9/12.1 MB 2.2 MB/s eta 0:00:02\n",
      "   ------------------------------ --------- 9.1/12.1 MB 2.2 MB/s eta 0:00:02\n",
      "   ------------------------------ --------- 9.2/12.1 MB 2.2 MB/s eta 0:00:02\n",
      "   ------------------------------ --------- 9.3/12.1 MB 2.2 MB/s eta 0:00:02\n",
      "   ------------------------------- -------- 9.4/12.1 MB 2.3 MB/s eta 0:00:02\n",
      "   ------------------------------- -------- 9.5/12.1 MB 2.3 MB/s eta 0:00:02\n",
      "   -------------------------------- ------- 9.7/12.1 MB 2.3 MB/s eta 0:00:02\n",
      "   -------------------------------- ------- 9.8/12.1 MB 2.3 MB/s eta 0:00:02\n",
      "   -------------------------------- ------- 9.9/12.1 MB 2.3 MB/s eta 0:00:01\n",
      "   --------------------------------- ------ 10.1/12.1 MB 2.3 MB/s eta 0:00:01\n",
      "   --------------------------------- ------ 10.2/12.1 MB 2.3 MB/s eta 0:00:01\n",
      "   ---------------------------------- ----- 10.4/12.1 MB 2.3 MB/s eta 0:00:01\n",
      "   ----------------------------------- ---- 10.6/12.1 MB 2.3 MB/s eta 0:00:01\n",
      "   ----------------------------------- ---- 10.8/12.1 MB 2.4 MB/s eta 0:00:01\n",
      "   ------------------------------------ --- 10.9/12.1 MB 2.4 MB/s eta 0:00:01\n",
      "   ------------------------------------ --- 11.1/12.1 MB 2.4 MB/s eta 0:00:01\n",
      "   ------------------------------------- -- 11.3/12.1 MB 2.4 MB/s eta 0:00:01\n",
      "   ------------------------------------- -- 11.4/12.1 MB 2.4 MB/s eta 0:00:01\n",
      "   -------------------------------------- - 11.6/12.1 MB 2.4 MB/s eta 0:00:01\n",
      "   ---------------------------------------  11.8/12.1 MB 2.4 MB/s eta 0:00:01\n",
      "   ---------------------------------------  12.0/12.1 MB 2.5 MB/s eta 0:00:01\n",
      "   ---------------------------------------- 12.1/12.1 MB 2.4 MB/s eta 0:00:00\n",
      "Downloading catalogue-2.0.10-py3-none-any.whl (17 kB)\n",
      "Downloading cymem-2.0.8-cp311-cp311-win_amd64.whl (39 kB)\n",
      "Downloading murmurhash-1.0.10-cp311-cp311-win_amd64.whl (25 kB)\n",
      "Downloading preshed-3.0.9-cp311-cp311-win_amd64.whl (122 kB)\n",
      "   ---------------------------------------- 0.0/122.3 kB ? eta -:--:--\n",
      "   ---------------------------------------- 122.3/122.3 kB 7.5 MB/s eta 0:00:00\n",
      "Downloading spacy_loggers-1.0.5-py3-none-any.whl (22 kB)\n",
      "Downloading srsly-2.4.8-cp311-cp311-win_amd64.whl (479 kB)\n",
      "   ---------------------------------------- 0.0/479.7 kB ? eta -:--:--\n",
      "   ----------- ---------------------------- 143.4/479.7 kB 2.9 MB/s eta 0:00:01\n",
      "   ------------------------- -------------- 307.2/479.7 kB 3.2 MB/s eta 0:00:01\n",
      "   ------------------------------------ --- 440.3/479.7 kB 3.4 MB/s eta 0:00:01\n",
      "   ---------------------------------------- 479.7/479.7 kB 3.0 MB/s eta 0:00:00\n",
      "Downloading thinc-8.2.1-cp311-cp311-win_amd64.whl (1.5 MB)\n",
      "   ---------------------------------------- 0.0/1.5 MB ? eta -:--:--\n",
      "   --- ------------------------------------ 0.1/1.5 MB 2.8 MB/s eta 0:00:01\n",
      "   ------- -------------------------------- 0.3/1.5 MB 3.4 MB/s eta 0:00:01\n",
      "   ------------ --------------------------- 0.5/1.5 MB 3.2 MB/s eta 0:00:01\n",
      "   --------------- ------------------------ 0.6/1.5 MB 3.3 MB/s eta 0:00:01\n",
      "   ------------------- -------------------- 0.7/1.5 MB 3.1 MB/s eta 0:00:01\n",
      "   --------------------- ------------------ 0.8/1.5 MB 2.8 MB/s eta 0:00:01\n",
      "   ------------------------ --------------- 0.9/1.5 MB 2.8 MB/s eta 0:00:01\n",
      "   --------------------------- ------------ 1.0/1.5 MB 2.8 MB/s eta 0:00:01\n",
      "   ------------------------------ --------- 1.1/1.5 MB 2.6 MB/s eta 0:00:01\n",
      "   -------------------------------- ------- 1.2/1.5 MB 2.5 MB/s eta 0:00:01\n",
      "   ---------------------------------- ----- 1.3/1.5 MB 2.5 MB/s eta 0:00:01\n",
      "   ----------------------------------- ---- 1.3/1.5 MB 2.4 MB/s eta 0:00:01\n",
      "   ------------------------------------- -- 1.4/1.5 MB 2.3 MB/s eta 0:00:01\n",
      "   -------------------------------------- - 1.4/1.5 MB 2.2 MB/s eta 0:00:01\n",
      "   ---------------------------------------- 1.5/1.5 MB 2.2 MB/s eta 0:00:00\n",
      "Downloading wasabi-1.1.2-py3-none-any.whl (27 kB)\n",
      "Downloading weasel-0.3.4-py3-none-any.whl (50 kB)\n",
      "   ---------------------------------------- 0.0/50.1 kB ? eta -:--:--\n",
      "   ------------------------ --------------- 30.7/50.1 kB 1.3 MB/s eta 0:00:01\n",
      "   ---------------------------------------- 50.1/50.1 kB 1.3 MB/s eta 0:00:00\n",
      "Downloading blis-0.7.11-cp311-cp311-win_amd64.whl (6.6 MB)\n",
      "   ---------------------------------------- 0.0/6.6 MB ? eta -:--:--\n",
      "   ---------------------------------------- 0.0/6.6 MB 960.0 kB/s eta 0:00:07\n",
      "    --------------------------------------- 0.1/6.6 MB 1.3 MB/s eta 0:00:06\n",
      "   - -------------------------------------- 0.2/6.6 MB 1.3 MB/s eta 0:00:05\n",
      "   - -------------------------------------- 0.2/6.6 MB 1.3 MB/s eta 0:00:06\n",
      "   - -------------------------------------- 0.3/6.6 MB 1.2 MB/s eta 0:00:06\n",
      "   - -------------------------------------- 0.3/6.6 MB 1.2 MB/s eta 0:00:06\n",
      "   -- ------------------------------------- 0.4/6.6 MB 1.2 MB/s eta 0:00:06\n",
      "   -- ------------------------------------- 0.4/6.6 MB 1.1 MB/s eta 0:00:06\n",
      "   -- ------------------------------------- 0.4/6.6 MB 1.1 MB/s eta 0:00:06\n",
      "   -- ------------------------------------- 0.5/6.6 MB 1.0 MB/s eta 0:00:07\n",
      "   --- ------------------------------------ 0.5/6.6 MB 992.2 kB/s eta 0:00:07\n",
      "   --- ------------------------------------ 0.5/6.6 MB 954.7 kB/s eta 0:00:07\n",
      "   --- ------------------------------------ 0.6/6.6 MB 965.4 kB/s eta 0:00:07\n",
      "   --- ------------------------------------ 0.6/6.6 MB 950.7 kB/s eta 0:00:07\n",
      "   --- ------------------------------------ 0.7/6.6 MB 937.7 kB/s eta 0:00:07\n",
      "   ---- ----------------------------------- 0.7/6.6 MB 901.1 kB/s eta 0:00:07\n",
      "   ---- ----------------------------------- 0.7/6.6 MB 869.1 kB/s eta 0:00:07\n",
      "   ---- ----------------------------------- 0.7/6.6 MB 869.1 kB/s eta 0:00:07\n",
      "   ---- ----------------------------------- 0.7/6.6 MB 827.5 kB/s eta 0:00:08\n",
      "   ---- ----------------------------------- 0.8/6.6 MB 821.9 kB/s eta 0:00:08\n",
      "   ---- ----------------------------------- 0.8/6.6 MB 800.5 kB/s eta 0:00:08\n",
      "   ----- ---------------------------------- 0.8/6.6 MB 793.8 kB/s eta 0:00:08\n",
      "   ----- ---------------------------------- 0.9/6.6 MB 797.2 kB/s eta 0:00:08\n",
      "   ----- ---------------------------------- 0.9/6.6 MB 810.1 kB/s eta 0:00:08\n",
      "   ----- ---------------------------------- 1.0/6.6 MB 803.8 kB/s eta 0:00:08\n",
      "   ------ --------------------------------- 1.0/6.6 MB 804.3 kB/s eta 0:00:07\n",
      "   ------ --------------------------------- 1.0/6.6 MB 806.7 kB/s eta 0:00:07\n",
      "   ------ --------------------------------- 1.1/6.6 MB 816.7 kB/s eta 0:00:07\n",
      "   ------ --------------------------------- 1.1/6.6 MB 835.8 kB/s eta 0:00:07\n",
      "   ------- -------------------------------- 1.2/6.6 MB 842.5 kB/s eta 0:00:07\n",
      "   ------- -------------------------------- 1.3/6.6 MB 859.2 kB/s eta 0:00:07\n",
      "   -------- ------------------------------- 1.3/6.6 MB 864.6 kB/s eta 0:00:07\n",
      "   -------- ------------------------------- 1.4/6.6 MB 869.0 kB/s eta 0:00:07\n",
      "   -------- ------------------------------- 1.4/6.6 MB 880.1 kB/s eta 0:00:06\n",
      "   -------- ------------------------------- 1.5/6.6 MB 889.9 kB/s eta 0:00:06\n",
      "   --------- ------------------------------ 1.5/6.6 MB 901.4 kB/s eta 0:00:06\n",
      "   --------- ------------------------------ 1.6/6.6 MB 903.0 kB/s eta 0:00:06\n",
      "   ---------- ----------------------------- 1.7/6.6 MB 925.2 kB/s eta 0:00:06\n",
      "   ---------- ----------------------------- 1.7/6.6 MB 935.0 kB/s eta 0:00:06\n",
      "   ---------- ----------------------------- 1.8/6.6 MB 939.3 kB/s eta 0:00:06\n",
      "   ----------- ---------------------------- 1.8/6.6 MB 932.8 kB/s eta 0:00:06\n",
      "   ----------- ---------------------------- 1.9/6.6 MB 954.4 kB/s eta 0:00:05\n",
      "   ------------ --------------------------- 2.0/6.6 MB 965.5 kB/s eta 0:00:05\n",
      "   ------------ --------------------------- 2.0/6.6 MB 980.2 kB/s eta 0:00:05\n",
      "   ------------ --------------------------- 2.1/6.6 MB 990.0 kB/s eta 0:00:05\n",
      "   ------------- -------------------------- 2.2/6.6 MB 996.9 kB/s eta 0:00:05\n",
      "   ------------- -------------------------- 2.2/6.6 MB 1.0 MB/s eta 0:00:05\n",
      "   ------------- -------------------------- 2.3/6.6 MB 1.0 MB/s eta 0:00:05\n",
      "   -------------- ------------------------- 2.4/6.6 MB 1.0 MB/s eta 0:00:05\n",
      "   -------------- ------------------------- 2.4/6.6 MB 1.1 MB/s eta 0:00:04\n",
      "   --------------- ------------------------ 2.5/6.6 MB 1.1 MB/s eta 0:00:04\n",
      "   --------------- ------------------------ 2.6/6.6 MB 1.1 MB/s eta 0:00:04\n",
      "   ---------------- ----------------------- 2.7/6.6 MB 1.1 MB/s eta 0:00:04\n",
      "   ---------------- ----------------------- 2.8/6.6 MB 1.1 MB/s eta 0:00:04\n",
      "   ----------------- ---------------------- 2.8/6.6 MB 1.1 MB/s eta 0:00:04\n",
      "   ----------------- ---------------------- 2.9/6.6 MB 1.1 MB/s eta 0:00:04\n",
      "   ----------------- ---------------------- 2.9/6.6 MB 1.1 MB/s eta 0:00:04\n",
      "   ----------------- ---------------------- 2.9/6.6 MB 1.1 MB/s eta 0:00:04\n",
      "   ------------------ --------------------- 3.0/6.6 MB 1.1 MB/s eta 0:00:04\n",
      "   ------------------ --------------------- 3.0/6.6 MB 1.1 MB/s eta 0:00:04\n",
      "   ------------------ --------------------- 3.1/6.6 MB 1.1 MB/s eta 0:00:04\n",
      "   ------------------ --------------------- 3.1/6.6 MB 1.1 MB/s eta 0:00:04\n",
      "   ------------------- -------------------- 3.2/6.6 MB 1.1 MB/s eta 0:00:04\n",
      "   ------------------- -------------------- 3.2/6.6 MB 1.1 MB/s eta 0:00:04\n",
      "   ------------------- -------------------- 3.3/6.6 MB 1.1 MB/s eta 0:00:04\n",
      "   -------------------- ------------------- 3.3/6.6 MB 1.1 MB/s eta 0:00:03\n",
      "   -------------------- ------------------- 3.4/6.6 MB 1.1 MB/s eta 0:00:03\n",
      "   -------------------- ------------------- 3.4/6.6 MB 1.1 MB/s eta 0:00:03\n",
      "   --------------------- ------------------ 3.5/6.6 MB 1.1 MB/s eta 0:00:03\n",
      "   --------------------- ------------------ 3.6/6.6 MB 1.1 MB/s eta 0:00:03\n",
      "   ---------------------- ----------------- 3.6/6.6 MB 1.1 MB/s eta 0:00:03\n",
      "   ---------------------- ----------------- 3.7/6.6 MB 1.1 MB/s eta 0:00:03\n",
      "   ---------------------- ----------------- 3.8/6.6 MB 1.1 MB/s eta 0:00:03\n",
      "   ----------------------- ---------------- 3.9/6.6 MB 1.1 MB/s eta 0:00:03\n",
      "   ----------------------- ---------------- 3.9/6.6 MB 1.1 MB/s eta 0:00:03\n",
      "   ------------------------ --------------- 4.0/6.6 MB 1.1 MB/s eta 0:00:03\n",
      "   ------------------------ --------------- 4.1/6.6 MB 1.2 MB/s eta 0:00:03\n",
      "   ------------------------- -------------- 4.2/6.6 MB 1.2 MB/s eta 0:00:03\n",
      "   ------------------------- -------------- 4.3/6.6 MB 1.2 MB/s eta 0:00:02\n",
      "   -------------------------- ------------- 4.4/6.6 MB 1.2 MB/s eta 0:00:02\n",
      "   -------------------------- ------------- 4.4/6.6 MB 1.2 MB/s eta 0:00:02\n",
      "   --------------------------- ------------ 4.5/6.6 MB 1.2 MB/s eta 0:00:02\n",
      "   ---------------------------- ----------- 4.7/6.6 MB 1.2 MB/s eta 0:00:02\n",
      "   ---------------------------- ----------- 4.8/6.6 MB 1.2 MB/s eta 0:00:02\n",
      "   ----------------------------- ---------- 4.9/6.6 MB 1.2 MB/s eta 0:00:02\n",
      "   ------------------------------ --------- 5.0/6.6 MB 1.3 MB/s eta 0:00:02\n",
      "   ------------------------------ --------- 5.1/6.6 MB 1.3 MB/s eta 0:00:02\n",
      "   ------------------------------- -------- 5.2/6.6 MB 1.3 MB/s eta 0:00:02\n",
      "   -------------------------------- ------- 5.3/6.6 MB 1.3 MB/s eta 0:00:01\n",
      "   --------------------------------- ------ 5.5/6.6 MB 1.3 MB/s eta 0:00:01\n",
      "   --------------------------------- ------ 5.5/6.6 MB 1.3 MB/s eta 0:00:01\n",
      "   ---------------------------------- ----- 5.6/6.6 MB 1.3 MB/s eta 0:00:01\n",
      "   ---------------------------------- ----- 5.7/6.6 MB 1.3 MB/s eta 0:00:01\n",
      "   ---------------------------------- ----- 5.8/6.6 MB 1.3 MB/s eta 0:00:01\n",
      "   ----------------------------------- ---- 5.8/6.6 MB 1.3 MB/s eta 0:00:01\n",
      "   ----------------------------------- ---- 5.9/6.6 MB 1.3 MB/s eta 0:00:01\n",
      "   ------------------------------------ --- 6.0/6.6 MB 1.3 MB/s eta 0:00:01\n",
      "   ------------------------------------ --- 6.1/6.6 MB 1.4 MB/s eta 0:00:01\n",
      "   ------------------------------------- -- 6.1/6.6 MB 1.4 MB/s eta 0:00:01\n",
      "   ------------------------------------- -- 6.2/6.6 MB 1.4 MB/s eta 0:00:01\n",
      "   -------------------------------------- - 6.3/6.6 MB 1.4 MB/s eta 0:00:01\n",
      "   ---------------------------------------  6.4/6.6 MB 1.4 MB/s eta 0:00:01\n",
      "   ---------------------------------------  6.5/6.6 MB 1.4 MB/s eta 0:00:01\n",
      "   ---------------------------------------  6.6/6.6 MB 1.4 MB/s eta 0:00:01\n",
      "   ---------------------------------------- 6.6/6.6 MB 1.4 MB/s eta 0:00:00\n",
      "Downloading cloudpathlib-0.16.0-py3-none-any.whl (45 kB)\n",
      "   ---------------------------------------- 0.0/45.0 kB ? eta -:--:--\n",
      "   ---------------------------------------- 45.0/45.0 kB 1.1 MB/s eta 0:00:00\n",
      "Downloading confection-0.1.3-py3-none-any.whl (34 kB)\n",
      "Installing collected packages: cymem, wasabi, spacy-loggers, spacy-legacy, murmurhash, langcodes, fastprogress, fastcore, cloudpathlib, catalogue, blis, typer, srsly, preshed, fastdownload, confection, weasel, thinc, spacy, fastai\n",
      "Successfully installed blis-0.7.11 catalogue-2.0.10 cloudpathlib-0.16.0 confection-0.1.3 cymem-2.0.8 fastai-2.7.13 fastcore-1.5.29 fastdownload-0.0.7 fastprogress-1.0.3 langcodes-3.3.0 murmurhash-1.0.10 preshed-3.0.9 spacy-3.7.2 spacy-legacy-3.0.12 spacy-loggers-1.0.5 srsly-2.4.8 thinc-8.2.1 typer-0.9.0 wasabi-1.1.2 weasel-0.3.4\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install fastai"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "9ffd449f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'2.7.13'"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import fastai\n",
    "fastai.__version__"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "b30943a6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "```text\n",
      "=== Software === \n",
      "python       : 3.11.5\n",
      "fastai       : 2.7.13\n",
      "fastcore     : 1.5.29\n",
      "fastprogress : 1.0.3\n",
      "torch        : 2.1.0+cpu\n",
      "torch cuda   : None / is **Not available** \n",
      "\n",
      "=== Hardware === \n",
      "No GPUs available \n",
      "\n",
      "=== Environment === \n",
      "platform     : Windows-10-10.0.22621-SP0\n",
      "conda env    : base\n",
      "python       : F:\\Users\\vaish\\anaconda3\\python.exe\n",
      "sys.path     : C:\\Users\\vaish\n",
      "F:\\Users\\vaish\\anaconda3\\python311.zip\n",
      "F:\\Users\\vaish\\anaconda3\\DLLs\n",
      "F:\\Users\\vaish\\anaconda3\\Lib\n",
      "F:\\Users\\vaish\\anaconda3\n",
      "\n",
      "F:\\Users\\vaish\\anaconda3\\Lib\\site-packages\n",
      "F:\\Users\\vaish\\anaconda3\\Lib\\site-packages\\win32\n",
      "F:\\Users\\vaish\\anaconda3\\Lib\\site-packages\\win32\\lib\n",
      "F:\\Users\\vaish\\anaconda3\\Lib\\site-packages\\Pythonwin\n",
      "no supported gpus found on this system\n",
      "```\n",
      "\n",
      "Please make sure to include opening/closing ``` when you paste into forums/github to make the reports appear formatted as code sections.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from fastai.test_utils import show_install\n",
    "show_install()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "323daa6b",
   "metadata": {},
   "outputs": [],
   "source": [
    "from fastai.vision.all import *\n",
    "import numpy as np\n",
    "import math"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "57c87271",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[[1.0,\n",
       "  0.9876883405951378,\n",
       "  0.9510565162951535,\n",
       "  0.8910065241883679,\n",
       "  0.8090169943749475,\n",
       "  0.7071067811865476,\n",
       "  0.5877852522924731,\n",
       "  0.4539904997395468,\n",
       "  0.30901699437494745,\n",
       "  0.15643446504023092,\n",
       "  6.123233995736766e-17,\n",
       "  -0.1564344650402306,\n",
       "  -0.30901699437494734,\n",
       "  -0.45399049973954675,\n",
       "  -0.587785252292473,\n",
       "  -0.7071067811865475,\n",
       "  -0.8090169943749473,\n",
       "  -0.8910065241883678,\n",
       "  -0.9510565162951535,\n",
       "  -0.9876883405951377],\n",
       " [0.0,\n",
       "  0.15643446504023087,\n",
       "  0.3090169943749474,\n",
       "  0.45399049973954675,\n",
       "  0.5877852522924731,\n",
       "  0.7071067811865476,\n",
       "  0.8090169943749475,\n",
       "  0.8910065241883678,\n",
       "  0.9510565162951535,\n",
       "  0.9876883405951378,\n",
       "  1.0,\n",
       "  0.9876883405951378,\n",
       "  0.9510565162951536,\n",
       "  0.8910065241883679,\n",
       "  0.8090169943749475,\n",
       "  0.7071067811865476,\n",
       "  0.5877852522924732,\n",
       "  0.45399049973954686,\n",
       "  0.3090169943749475,\n",
       "  0.15643446504023098]]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "PATTERN_SIZE=20\n",
    "patterns_labels = [\"cos\", \"sin\"]\n",
    "# patterns = [ np.zeros(PATTERN_SIZE), np.ones(PATTERN_SIZE),  np.array([math.sin(i*math.pi/PATTERN_SIZE)for i in range(0, PATTERN_SIZE)])]\n",
    "patterns = [ [math.cos(i*math.pi/PATTERN_SIZE)for i in range(0, PATTERN_SIZE)], [math.sin(i*math.pi/PATTERN_SIZE)for i in range(0, PATTERN_SIZE)]]\n",
    "patterns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "aecde386",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "<style>\n",
       "    /* Turns off some styling */\n",
       "    progress {\n",
       "        /* gets rid of default border in Firefox and Opera. */\n",
       "        border: none;\n",
       "        /* Needs to be in here for Safari polyfill so background images work as expected. */\n",
       "        background-size: auto;\n",
       "    }\n",
       "    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n",
       "        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n",
       "    }\n",
       "    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n",
       "        background: #F44336;\n",
       "    }\n",
       "</style>\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div>\n",
       "      <progress value='10000' class='' max='10000' style='width:300px; height:20px; vertical-align: middle;'></progress>\n",
       "      100.00% [10000/10000 00:00&lt;00:00]\n",
       "    </div>\n",
       "    "
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "items = []\n",
    "for i in progress_bar(range(0, 10000)):\n",
    "    items += [((patterns[i % len(patterns)] +  np.random.normal(0, .1, PATTERN_SIZE)).astype(float), patterns_labels[(i % len(patterns))],i % len(patterns))]\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "4d9cd775",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Tensor(items[0][0].tolist()).float()\n",
    "items[2][2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "2254b91e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# items = list(range(0,10))\n",
    "def get_items(_):\n",
    "    return list(range(0, len(items)))\n",
    "#     return \n",
    "\n",
    "def label_func(i):\n",
    "    return items[i][1]\n",
    "def get_y(i):\n",
    "    pos = items[i][2]\n",
    "    res = [0]*len(patterns)\n",
    "    res[pos]=1\n",
    "    return Tensor(res).float()\n",
    "def get_x(i):\n",
    "    item = items[i]\n",
    "    a = item[0].tolist()\n",
    "    return Tensor(a).float()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "725337f7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(tensor([ 0.9870,  1.0631,  0.9899,  0.8981,  1.0234,  0.6699,  0.4329,  0.3498,\n",
       "          0.3006,  0.1755,  0.0764, -0.2385, -0.1616, -0.4595, -0.6319, -0.7165,\n",
       "         -0.7546, -0.7487, -0.8948, -0.8860]),\n",
       " TensorCategory(0))"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dblock = DataBlock(blocks= (TransformBlock, CategoryBlock), get_items=get_items, get_y=label_func, get_x=get_x, splitter  = RandomSplitter())\n",
    "# dblock = DataBlock(blocks= (TransformBlock, TransformBlock), get_items=get_items, get_y=get_y, get_x=get_x, splitter  = RandomSplitter())\n",
    "dsets = dblock.datasets(10)\n",
    "dsets.train[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "e96de257",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "F:\\Users\\vaish\\anaconda3\\Lib\\site-packages\\fastai\\torch_core.py:263: UserWarning: 'has_mps' is deprecated, please use 'torch.backends.mps.is_built()'\n",
      "  return getattr(torch, 'has_mps', False)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(torch.Size([64, 20]), torch.Size([64]))"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dls = dblock.dataloaders(0)\n",
    "x,y = dls.one_batch()\n",
    "x.shape, y.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "edbe2ce1",
   "metadata": {},
   "outputs": [],
   "source": [
    "def encoder():\n",
    "    return nn.Sequential(\n",
    "        nn.Linear(PATTERN_SIZE,8),\n",
    "        nn.ReLU(),\n",
    "        nn.Linear(8,2)\n",
    "    )\n",
    "\n",
    "def classifier():\n",
    "    return nn.Sequential(\n",
    "        encoder(), \n",
    "        nn.Sequential(\n",
    "            nn.ReLU(),\n",
    "            nn.Linear(2,1),\n",
    "            nn.Sigmoid(),\n",
    "        )\n",
    "    )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "6b569842",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "torch.Size([64, 1])"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cla = classifier()\n",
    "cla(x).shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "d24759c2",
   "metadata": {},
   "outputs": [],
   "source": [
    "learn = Learner(dls, cla, loss_func=MSELossFlat())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "ce85f867",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "<style>\n",
       "    /* Turns off some styling */\n",
       "    progress {\n",
       "        /* gets rid of default border in Firefox and Opera. */\n",
       "        border: none;\n",
       "        /* Needs to be in here for Safari polyfill so background images work as expected. */\n",
       "        background-size: auto;\n",
       "    }\n",
       "    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n",
       "        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n",
       "    }\n",
       "    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n",
       "        background: #F44336;\n",
       "    }\n",
       "</style>\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "SuggestedLRs(valley=0.004365158267319202)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "learn.lr_find()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "aa4b6ba1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "<style>\n",
       "    /* Turns off some styling */\n",
       "    progress {\n",
       "        /* gets rid of default border in Firefox and Opera. */\n",
       "        border: none;\n",
       "        /* Needs to be in here for Safari polyfill so background images work as expected. */\n",
       "        background-size: auto;\n",
       "    }\n",
       "    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n",
       "        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n",
       "    }\n",
       "    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n",
       "        background: #F44336;\n",
       "    }\n",
       "</style>\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: left;\">\n",
       "      <th>epoch</th>\n",
       "      <th>train_loss</th>\n",
       "      <th>valid_loss</th>\n",
       "      <th>time</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>0.013881</td>\n",
       "      <td>0.000002</td>\n",
       "      <td>00:07</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "<style>\n",
       "    /* Turns off some styling */\n",
       "    progress {\n",
       "        /* gets rid of default border in Firefox and Opera. */\n",
       "        border: none;\n",
       "        /* Needs to be in here for Safari polyfill so background images work as expected. */\n",
       "        background-size: auto;\n",
       "    }\n",
       "    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n",
       "        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n",
       "    }\n",
       "    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n",
       "        background: #F44336;\n",
       "    }\n",
       "</style>\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: left;\">\n",
       "      <th>epoch</th>\n",
       "      <th>train_loss</th>\n",
       "      <th>valid_loss</th>\n",
       "      <th>time</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>00:06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>00:05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>00:07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>00:06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>00:07</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "learn.fine_tune(5, base_lr = 0.04)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "c089cd6f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "<style>\n",
       "    /* Turns off some styling */\n",
       "    progress {\n",
       "        /* gets rid of default border in Firefox and Opera. */\n",
       "        border: none;\n",
       "        /* Needs to be in here for Safari polyfill so background images work as expected. */\n",
       "        background-size: auto;\n",
       "    }\n",
       "    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n",
       "        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n",
       "    }\n",
       "    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n",
       "        background: #F44336;\n",
       "    }\n",
       "</style>\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: left;\">\n",
       "      <th>epoch</th>\n",
       "      <th>train_loss</th>\n",
       "      <th>valid_loss</th>\n",
       "      <th>time</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>00:05</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "<style>\n",
       "    /* Turns off some styling */\n",
       "    progress {\n",
       "        /* gets rid of default border in Firefox and Opera. */\n",
       "        border: none;\n",
       "        /* Needs to be in here for Safari polyfill so background images work as expected. */\n",
       "        background-size: auto;\n",
       "    }\n",
       "    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n",
       "        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n",
       "    }\n",
       "    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n",
       "        background: #F44336;\n",
       "    }\n",
       "</style>\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: left;\">\n",
       "      <th>epoch</th>\n",
       "      <th>train_loss</th>\n",
       "      <th>valid_loss</th>\n",
       "      <th>time</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>00:06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>00:05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>00:08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>00:06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>00:07</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "learn.fine_tune(5, base_lr = 0.04)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "485f56d7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(array([ 0.92195734,  0.99227049,  1.06117805,  0.94282613,  0.71174846,\n",
      "        0.74967163,  0.6755153 ,  0.48036429,  0.27345954,  0.10326024,\n",
      "        0.0908084 , -0.03206429, -0.09276916, -0.41645311, -0.77068574,\n",
      "       -0.66165933, -1.05213263, -0.90139198, -0.92980042, -0.98877029]), 'cos', 0)\n",
      "tensor([0.0001])\n",
      "(array([0.22193067, 0.06359517, 0.17926164, 0.38933466, 0.51225009,\n",
      "       0.69575415, 0.75890269, 0.73526596, 1.00003266, 0.81388473,\n",
      "       0.91517648, 0.89478007, 0.78685534, 0.8297949 , 0.92742672,\n",
      "       0.62136217, 0.73625097, 0.50441046, 0.28780575, 0.24389094]), 'sin', 1)\n",
      "tensor([0.9998])\n",
      "(array([ 0.97941055,  1.08386248,  0.89497874,  0.80572135,  0.7804395 ,\n",
      "        0.65229009,  0.77101122,  0.65702172,  0.38829867,  0.03644117,\n",
      "        0.20918015, -0.22590512, -0.28254137, -0.53054387, -0.57698251,\n",
      "       -0.69230048, -0.7675573 , -0.99600445, -0.80987475, -1.00648447]), 'cos', 0)\n",
      "tensor([0.0001])\n",
      "(array([-0.03467354,  0.18417195,  0.29866452,  0.35389488,  0.69829172,\n",
      "        0.71110104,  0.74781688,  0.81837909,  0.94029226,  0.88835899,\n",
      "        0.94911088,  0.9445142 ,  0.88215806,  0.7814002 ,  0.71732524,\n",
      "        0.64745801,  0.50336993,  0.45407418,  0.27455435,  0.19712506]), 'sin', 1)\n",
      "tensor([0.9998])\n",
      "(array([ 0.85752256,  0.97164038,  1.0736874 ,  0.94638412,  0.82907872,\n",
      "        0.69349188,  0.65575596,  0.42766213,  0.48361663,  0.25499735,\n",
      "        0.02599638, -0.23621417, -0.25084599, -0.47166418, -0.53062402,\n",
      "       -0.60964009, -0.76237296, -0.87994754, -1.150258  , -1.06371012]), 'cos', 0)\n",
      "tensor([9.9945e-05])\n",
      "(array([0.16309443, 0.1039649 , 0.30292067, 0.62874128, 0.66520295,\n",
      "       0.56771822, 1.08441226, 0.94568954, 1.06069156, 0.93421933,\n",
      "       1.14601372, 0.73361071, 1.08601521, 0.79443214, 0.63799556,\n",
      "       0.72786245, 0.5877104 , 0.34274568, 0.15919117, 0.21652157]), 'sin', 1)\n",
      "tensor([0.9998])\n"
     ]
    }
   ],
   "source": [
    "with torch.no_grad():\n",
    "    for i in range(0,6):\n",
    "        print(items[i])\n",
    "        print(cla(get_x(i)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "504304e4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(tensor([ 0.9677,  0.9246,  0.8455,  0.8403,  0.6680,  0.6013,  0.6334,  0.4524,\n",
       "          0.1619,  0.1601, -0.1022, -0.1951, -0.2032, -0.2990, -0.6265, -0.6025,\n",
       "         -0.9199, -0.9174, -0.8654, -1.0144]),\n",
       " tensor([ 0.9677,  0.9246,  0.8455,  0.8403,  0.6680,  0.6013,  0.6334,  0.4524,\n",
       "          0.1619,  0.1601, -0.1022, -0.1951, -0.2032, -0.2990, -0.6265, -0.6025,\n",
       "         -0.9199, -0.9174, -0.8654, -1.0144]))"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dblock = DataBlock(blocks= (TransformBlock, TransformBlock), get_items=get_items, get_x=get_x, get_y=get_x, splitter  = RandomSplitter())\n",
    "# dblock = DataBlock(blocks= (TransformBlock, CategoryBlock), get_items=get_items, get_y=label_func, get_x=get_x, splitter  = RandomSplitter())\n",
    "dsets = dblock.datasets(10)\n",
    "dsets.train[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "eb31713d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(torch.Size([64, 20]), torch.Size([64, 20]))"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dls = dblock.dataloaders(0)\n",
    "x,y = dls.one_batch()\n",
    "x.shape, y.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "a0790faf",
   "metadata": {},
   "outputs": [],
   "source": [
    "def encoder():\n",
    "    return nn.Sequential(\n",
    "        nn.Linear(PATTERN_SIZE,8),\n",
    "        nn.ReLU(),\n",
    "        nn.Linear(8,2)\n",
    "    )\n",
    "def decoder():\n",
    "    return nn.Sequential(\n",
    "        nn.Linear(2,8),\n",
    "        nn.ReLU(),\n",
    "        nn.Linear(8,PATTERN_SIZE)\n",
    "    )\n",
    "\n",
    "def autoencoder(): return nn.Sequential(encoder(), decoder())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "c0ea950f",
   "metadata": {},
   "outputs": [],
   "source": [
    "ac = autoencoder()\n",
    "enc = encoder()\n",
    "dec = decoder()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "b343f45c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "torch.Size([64, 20])"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ac(x).shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "e1742c5e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "torch.Size([64, 20])"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dec(enc(x)).shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "8e4680e7",
   "metadata": {},
   "outputs": [],
   "source": [
    "learn = Learner(dls, ac, loss_func=MSELossFlat())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "a72515f6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "<style>\n",
       "    /* Turns off some styling */\n",
       "    progress {\n",
       "        /* gets rid of default border in Firefox and Opera. */\n",
       "        border: none;\n",
       "        /* Needs to be in here for Safari polyfill so background images work as expected. */\n",
       "        background-size: auto;\n",
       "    }\n",
       "    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n",
       "        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n",
       "    }\n",
       "    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n",
       "        background: #F44336;\n",
       "    }\n",
       "</style>\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "SuggestedLRs(valley=0.0020892962347716093)"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "learn.lr_find()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "65bcc27c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "<style>\n",
       "    /* Turns off some styling */\n",
       "    progress {\n",
       "        /* gets rid of default border in Firefox and Opera. */\n",
       "        border: none;\n",
       "        /* Needs to be in here for Safari polyfill so background images work as expected. */\n",
       "        background-size: auto;\n",
       "    }\n",
       "    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n",
       "        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n",
       "    }\n",
       "    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n",
       "        background: #F44336;\n",
       "    }\n",
       "</style>\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: left;\">\n",
       "      <th>epoch</th>\n",
       "      <th>train_loss</th>\n",
       "      <th>valid_loss</th>\n",
       "      <th>time</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>0.110610</td>\n",
       "      <td>0.014237</td>\n",
       "      <td>00:05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>0.017510</td>\n",
       "      <td>0.009731</td>\n",
       "      <td>00:05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>0.010468</td>\n",
       "      <td>0.009753</td>\n",
       "      <td>00:04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>0.010055</td>\n",
       "      <td>0.009631</td>\n",
       "      <td>00:04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>0.009960</td>\n",
       "      <td>0.010686</td>\n",
       "      <td>00:05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>0.009994</td>\n",
       "      <td>0.009631</td>\n",
       "      <td>00:04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>0.010060</td>\n",
       "      <td>0.010011</td>\n",
       "      <td>00:05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>0.009884</td>\n",
       "      <td>0.009759</td>\n",
       "      <td>00:06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>0.009728</td>\n",
       "      <td>0.009658</td>\n",
       "      <td>00:05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>0.009865</td>\n",
       "      <td>0.009518</td>\n",
       "      <td>00:07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>10</td>\n",
       "      <td>0.009607</td>\n",
       "      <td>0.009515</td>\n",
       "      <td>00:05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>11</td>\n",
       "      <td>0.009558</td>\n",
       "      <td>0.009929</td>\n",
       "      <td>00:05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>12</td>\n",
       "      <td>0.009496</td>\n",
       "      <td>0.009387</td>\n",
       "      <td>00:05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>13</td>\n",
       "      <td>0.009392</td>\n",
       "      <td>0.009249</td>\n",
       "      <td>00:04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>14</td>\n",
       "      <td>0.009399</td>\n",
       "      <td>0.009358</td>\n",
       "      <td>00:04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15</td>\n",
       "      <td>0.009286</td>\n",
       "      <td>0.009251</td>\n",
       "      <td>00:04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>16</td>\n",
       "      <td>0.009248</td>\n",
       "      <td>0.009190</td>\n",
       "      <td>00:05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>17</td>\n",
       "      <td>0.009195</td>\n",
       "      <td>0.009209</td>\n",
       "      <td>00:05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>18</td>\n",
       "      <td>0.009193</td>\n",
       "      <td>0.009157</td>\n",
       "      <td>00:04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>19</td>\n",
       "      <td>0.009141</td>\n",
       "      <td>0.009120</td>\n",
       "      <td>00:05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>20</td>\n",
       "      <td>0.009137</td>\n",
       "      <td>0.009090</td>\n",
       "      <td>00:06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>21</td>\n",
       "      <td>0.009099</td>\n",
       "      <td>0.009022</td>\n",
       "      <td>00:04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>22</td>\n",
       "      <td>0.009079</td>\n",
       "      <td>0.009014</td>\n",
       "      <td>00:05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>23</td>\n",
       "      <td>0.009063</td>\n",
       "      <td>0.009017</td>\n",
       "      <td>00:04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>24</td>\n",
       "      <td>0.009073</td>\n",
       "      <td>0.009016</td>\n",
       "      <td>00:05</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "learn.fit_one_cycle(25, 0.04)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "700ef341",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import mean_squared_error"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "bc2be26d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "tensor([ 1.0040,  0.9965,  0.9550,  0.8918,  0.8109,  0.7075,  0.5840,  0.4543,\n",
      "         0.3078,  0.1553, -0.0011, -0.1590, -0.3150, -0.4554, -0.5878, -0.7147,\n",
      "        -0.8119, -0.8956, -0.9524, -0.9919])\n",
      "[ 0.92195734  0.99227049  1.06117805  0.94282613  0.71174846  0.74967163\n",
      "  0.6755153   0.48036429  0.27345954  0.10326024  0.0908084  -0.03206429\n",
      " -0.09276916 -0.41645311 -0.77068574 -0.66165933 -1.05213263 -0.90139198\n",
      " -0.92980042 -0.98877029]\n",
      "0.10372084075347847\n"
     ]
    }
   ],
   "source": [
    "i=0\n",
    "with torch.no_grad():\n",
    "    print(ac(get_x(i)))\n",
    "    print(items[i][0])\n",
    "    rms = mean_squared_error(items[i][0], ac(get_x(0)), squared=False)\n",
    "    print(rms)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "1028f476",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "**************************************************\n",
      "(array([ 0.92195734,  0.99227049,  1.06117805,  0.94282613,  0.71174846,\n",
      "        0.74967163,  0.6755153 ,  0.48036429,  0.27345954,  0.10326024,\n",
      "        0.0908084 , -0.03206429, -0.09276916, -0.41645311, -0.77068574,\n",
      "       -0.66165933, -1.05213263, -0.90139198, -0.92980042, -0.98877029]), 'cos', 0)\n",
      "=>\n",
      "tensor([ 1.0040,  0.9965,  0.9550,  0.8918,  0.8109,  0.7075,  0.5840,  0.4543,\n",
      "         0.3078,  0.1553, -0.0011, -0.1590, -0.3150, -0.4554, -0.5878, -0.7147,\n",
      "        -0.8119, -0.8956, -0.9524, -0.9919])\n",
      "rms: 0.10372084075347847\n",
      "**************************************************\n",
      "(array([0.22193067, 0.06359517, 0.17926164, 0.38933466, 0.51225009,\n",
      "       0.69575415, 0.75890269, 0.73526596, 1.00003266, 0.81388473,\n",
      "       0.91517648, 0.89478007, 0.78685534, 0.8297949 , 0.92742672,\n",
      "       0.62136217, 0.73625097, 0.50441046, 0.28780575, 0.24389094]), 'sin', 1)\n",
      "=>\n",
      "tensor([0.0082, 0.1631, 0.2835, 0.4633, 0.5807, 0.6892, 0.8008, 0.8678, 0.9133,\n",
      "        0.9666, 0.9532, 0.9620, 0.9593, 0.8303, 0.7777, 0.6800, 0.5639, 0.4204,\n",
      "        0.2877, 0.1653])\n",
      "rms: 0.10754247643443073\n",
      "**************************************************\n",
      "(array([ 0.97941055,  1.08386248,  0.89497874,  0.80572135,  0.7804395 ,\n",
      "        0.65229009,  0.77101122,  0.65702172,  0.38829867,  0.03644117,\n",
      "        0.20918015, -0.22590512, -0.28254137, -0.53054387, -0.57698251,\n",
      "       -0.69230048, -0.7675573 , -0.99600445, -0.80987475, -1.00648447]), 'cos', 0)\n",
      "=>\n",
      "tensor([ 1.0024,  0.9984,  0.9715,  0.8843,  0.8070,  0.7128,  0.5917,  0.4659,\n",
      "         0.3322,  0.1727,  0.0307, -0.1390, -0.3154, -0.4187, -0.5612, -0.6967,\n",
      "        -0.7943, -0.8724, -0.9448, -0.9937])\n",
      "rms: 0.1005589425478661\n",
      "**************************************************\n",
      "(array([-0.03467354,  0.18417195,  0.29866452,  0.35389488,  0.69829172,\n",
      "        0.71110104,  0.74781688,  0.81837909,  0.94029226,  0.88835899,\n",
      "        0.94911088,  0.9445142 ,  0.88215806,  0.7814002 ,  0.71732524,\n",
      "        0.64745801,  0.50336993,  0.45407418,  0.27455435,  0.19712506]), 'sin', 1)\n",
      "=>\n",
      "tensor([0.0271, 0.1780, 0.2940, 0.4658, 0.5802, 0.6830, 0.7971, 0.8572, 0.9014,\n",
      "        0.9543, 0.9346, 0.9447, 0.9386, 0.8031, 0.7580, 0.6567, 0.5403, 0.3993,\n",
      "        0.2584, 0.1448])\n",
      "rms: 0.051918245382209016\n",
      "**************************************************\n",
      "(array([ 0.85752256,  0.97164038,  1.0736874 ,  0.94638412,  0.82907872,\n",
      "        0.69349188,  0.65575596,  0.42766213,  0.48361663,  0.25499735,\n",
      "        0.02599638, -0.23621417, -0.25084599, -0.47166418, -0.53062402,\n",
      "       -0.60964009, -0.76237296, -0.87994754, -1.150258  , -1.06371012]), 'cos', 0)\n",
      "=>\n",
      "tensor([ 1.0089,  1.0071,  0.9926,  0.8834,  0.8073,  0.7204,  0.5969,  0.4743,\n",
      "         0.3499,  0.1809,  0.0525, -0.1312, -0.3272, -0.3942, -0.5504, -0.6927,\n",
      "        -0.7901, -0.8633, -0.9451, -1.0049])\n",
      "rms: 0.08438423998662721\n",
      "**************************************************\n",
      "(array([0.16309443, 0.1039649 , 0.30292067, 0.62874128, 0.66520295,\n",
      "       0.56771822, 1.08441226, 0.94568954, 1.06069156, 0.93421933,\n",
      "       1.14601372, 0.73361071, 1.08601521, 0.79443214, 0.63799556,\n",
      "       0.72786245, 0.5877104 , 0.34274568, 0.15919117, 0.21652157]), 'sin', 1)\n",
      "=>\n",
      "tensor([0.0280, 0.1783, 0.3100, 0.4630, 0.5828, 0.6906, 0.8003, 0.8654, 0.9147,\n",
      "        0.9612, 0.9515, 0.9514, 0.9324, 0.8262, 0.7680, 0.6643, 0.5476, 0.4107,\n",
      "        0.2622, 0.1376])\n",
      "rms: 0.12966499847692214\n"
     ]
    }
   ],
   "source": [
    "with torch.no_grad():\n",
    "    for i in range(0,6):\n",
    "        print(\"*\"*50)\n",
    "        print(items[i])\n",
    "        print(\"=>\")\n",
    "        print(ac(get_x(i)))\n",
    "        rms = mean_squared_error(items[i][0], ac(get_x(i)), squared=False)\n",
    "        print(f\"rms: {rms}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "d340d376",
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sns\n",
    "# tips = sns.load_dataset(\"tips\")\n",
    "# tips.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "cadc35d2",
   "metadata": {},
   "outputs": [],
   "source": [
    "# sns.scatterplot(data=tips, x=\"total_bill\", y=\"tip\", hue=\"time\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "41afae60",
   "metadata": {},
   "outputs": [],
   "source": [
    "# tips"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "abb8eacc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "<style>\n",
       "    /* Turns off some styling */\n",
       "    progress {\n",
       "        /* gets rid of default border in Firefox and Opera. */\n",
       "        border: none;\n",
       "        /* Needs to be in here for Safari polyfill so background images work as expected. */\n",
       "        background-size: auto;\n",
       "    }\n",
       "    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n",
       "        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n",
       "    }\n",
       "    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n",
       "        background: #F44336;\n",
       "    }\n",
       "</style>\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div>\n",
       "      <progress value='10000' class='' max='10000' style='width:300px; height:20px; vertical-align: middle;'></progress>\n",
       "      100.00% [10000/10000 00:00&lt;00:00]\n",
       "    </div>\n",
       "    "
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "with torch.no_grad():\n",
    "    result = []\n",
    "    for i in progress_bar(range(0, len(items))):\n",
    "        item = items[i]\n",
    "        result += [ (item[1], *enc(get_x(i)).numpy())]\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "982bc2ea",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>c</th>\n",
       "      <th>x</th>\n",
       "      <th>y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>cos</td>\n",
       "      <td>0.045298</td>\n",
       "      <td>-0.129098</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>sin</td>\n",
       "      <td>-0.102279</td>\n",
       "      <td>-0.149618</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>cos</td>\n",
       "      <td>-0.006734</td>\n",
       "      <td>-0.118427</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>sin</td>\n",
       "      <td>-0.048488</td>\n",
       "      <td>-0.151986</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>cos</td>\n",
       "      <td>-0.014712</td>\n",
       "      <td>-0.119911</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9995</th>\n",
       "      <td>sin</td>\n",
       "      <td>-0.097487</td>\n",
       "      <td>-0.143474</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9996</th>\n",
       "      <td>cos</td>\n",
       "      <td>0.032541</td>\n",
       "      <td>-0.118975</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9997</th>\n",
       "      <td>sin</td>\n",
       "      <td>-0.018407</td>\n",
       "      <td>-0.173676</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9998</th>\n",
       "      <td>cos</td>\n",
       "      <td>-0.007725</td>\n",
       "      <td>-0.116652</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9999</th>\n",
       "      <td>sin</td>\n",
       "      <td>-0.062147</td>\n",
       "      <td>-0.157705</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10000 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        c         x         y\n",
       "0     cos  0.045298 -0.129098\n",
       "1     sin -0.102279 -0.149618\n",
       "2     cos -0.006734 -0.118427\n",
       "3     sin -0.048488 -0.151986\n",
       "4     cos -0.014712 -0.119911\n",
       "...   ...       ...       ...\n",
       "9995  sin -0.097487 -0.143474\n",
       "9996  cos  0.032541 -0.118975\n",
       "9997  sin -0.018407 -0.173676\n",
       "9998  cos -0.007725 -0.116652\n",
       "9999  sin -0.062147 -0.157705\n",
       "\n",
       "[10000 rows x 3 columns]"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.DataFrame(result, columns=[\"c\",\"x\", \"y\"])\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "43af57e6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='x', ylabel='y'>"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.scatterplot(data=df, x=\"x\", y=\"y\", hue=\"c\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a3c220d1",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
